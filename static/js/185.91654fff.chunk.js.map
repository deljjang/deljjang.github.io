{"version":3,"file":"static/js/185.91654fff.chunk.js","mappings":"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","sources":["components/button/HomeMngTopButton.js","views/home/HomeMngDetail.js","views/home/HomeMng.js","views/memo/MemoMain.js"],"sourcesContent":["import { Box, Button, Grid, IconButton } from '@mui/material';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport AniButton from './AniButton';\r\n/* \r\n메모상세 상단 버튼 표시\r\n\r\n사용예)\r\n<MemoTopButton\r\nonEdit={onEditMode}\r\nonBookmark={onBookmark}\r\nonNewMemo={onNewMemo}\r\nbookmark={bookmark}\r\n/>\r\n */\r\nexport const HomeMngTopButton = (props) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        my: 2,\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      <AniButton\r\n        type=\"button\"\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        color=\"success\"\r\n        onClick={props.onEdit}\r\n      >\r\n        수정\r\n      </AniButton>\r\n      <AniButton\r\n        type=\"button\"\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        // color=\"success\"\r\n        onClick={props.onNewMemo}\r\n      >\r\n        새글\r\n      </AniButton>\r\n      <AniButton\r\n        type=\"button\"\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        color=\"warning\"\r\n        onClick={props.onMove}\r\n      >\r\n        이동\r\n      </AniButton>\r\n      <AniButton\r\n        type=\"button\"\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        color=\"error\"\r\n        onClick={props.onDelete}\r\n      >\r\n        삭제\r\n      </AniButton>\r\n    </Box>\r\n  );\r\n};\r\n","import { child, push, ref, set } from '@firebase/database';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Fab from '@mui/material/Fab';\r\nimport { deleteObject, ref as storegeRef, uploadBytes } from 'firebase/storage';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { firebaseDB, firebaseStorage } from '../../firebase/firebase';\r\nimport getExtensionOfFilename from '../../util/getExtensionOfFilename';\r\nimport Container from '@mui/material/Container';\r\nimport { Suspense } from 'react';\r\nimport { HomeMngTopButton } from '../../components/button/HomeMngTopButton';\r\nimport HtmlEditor from '../../components/edit/HtmlEditor';\r\nimport { HtmlText } from '../../components/item/HtmlText';\r\nimport { MemoMoveModal } from '../../components/MemoMoveModal';\r\nimport { ScrollToTop } from '../../components/screen/ScrollToTop';\r\nimport { SinyImageList } from '../../components/SinyImageList';\r\nimport { TitleItem } from '../../components/item/TitleItem';\r\nimport {\r\n  getFireText,\r\n  setHome,\r\n  setHomeFullIndex,\r\n} from '../../firebase/fireDatabase';\r\nimport { useFireText } from '../../firebase/useFireText';\r\nimport { useFireUser } from '../../firebase/useFireUser';\r\nimport { useSettings } from '../../hooks/useSettings';\r\nimport '../MemoDetail.css';\r\nimport { Loading } from '../../components/Loading';\r\n// Using ES6 import syntax\r\n// import hljs from 'highlight.js';\r\n// import { Quill } from 'react-quill';\r\n\r\n// Load any languages you need\r\n// hljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\r\n\r\nexport const HomeMngDetail = (props) => {\r\n  const {\r\n    title: detailTitle,\r\n    gbn,\r\n    date,\r\n    text: detailText,\r\n    image,\r\n    setFireId,\r\n    isLoading,\r\n    onReload,\r\n  } = useFireText();\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [moveOpen, setMoveOpen] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const newMode = useRef();\r\n  const searchWord = useRef();\r\n  searchWord.current = props.searchWord;\r\n  // console.log('MemoDetail.searchWord=', searchWord.current);\r\n\r\n  const { homeId } = useParams();\r\n  //console.log('MemoDetail=', props);\r\n\r\n  const location = useLocation();\r\n  const fullIndex = location?.state?.fullIndex;\r\n  // console.log('MemoDetail.fullIndex=', fullIndex);\r\n\r\n  const { user } = useFireUser();\r\n\r\n  // ** Hooks\r\n  const { settings, saveSettings } = useSettings();\r\n\r\n  const onEditMode = () => {\r\n    newMode.current = false;\r\n    if (isLoading === false) setEditMode(true);\r\n  };\r\n\r\n  const onNewMemo = () => {\r\n    newMode.current = true;\r\n    if (isLoading === false) setEditMode(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    // console.log('handleDelete.homeId=', homeId);\r\n\r\n    const data = await getFireText(`home_txt/${homeId}`);\r\n    if (data === undefined) {\r\n      alert('삭제에 실패했습니다.');\r\n      return;\r\n    }\r\n\r\n    // console.log('handleDelete.data=', data);\r\n\r\n    const treeLocate = `home/${data.fullIndex}/`;\r\n\r\n    set(ref(firebaseDB, treeLocate), null);\r\n    set(ref(firebaseDB, `home_txt/${homeId}`), null);\r\n\r\n    // fullIndex: \"-NmZXQW8Z1Z_EK-0gkUg/sub/-NmZXUXvc3nNTOZ5Dw_h\"\r\n    // memo: \"<p>test2test23</p><p>test2</p><p>test2</p><p>test2</p>\"\r\n    // title: \"test23\"\r\n\r\n    navigate('/homemng');\r\n  };\r\n\r\n  const onDelete = () => {\r\n    const message = `하위 자료가 있는 경우 같이 삭제됩니다.\r\n삭제하시겠습니까?`;\r\n    if (window.confirm(message)) {\r\n      handleDelete();\r\n    }\r\n    //newMode.current = true;\r\n    //if (isLoading === false) setEditMode(true);\r\n  };\r\n\r\n  const onMove = () => {\r\n    setMoveOpen(true);\r\n  };\r\n\r\n  //취소 버튼 클릭\r\n  const onNotEditMode = () => {\r\n    //console.log('onNotEdit');\r\n    setEditMode(false);\r\n  };\r\n\r\n  //이동 처리\r\n  const onMoveSubmit = async (moveId) => {\r\n    // console.log('onMoveSubmit.homeId', homeId);\r\n    // console.log('onMoveSubmit.moveId', moveId);\r\n\r\n    try {\r\n      //이동할 메모장 정보를 읽는다\r\n      const toData = await getFireText(`home_txt/${moveId}`);\r\n      if (toData === undefined) {\r\n        alert('이동에 실패했습니다.[code:110]');\r\n        return;\r\n      }\r\n      if (toData.fullIndex === undefined) {\r\n        alert('이동에 실패했습니다.[code:120]');\r\n        return;\r\n      }\r\n      // console.log('onMoveSubmit.toData=', toData);\r\n\r\n      //이동할 메모장 정보를 읽는다\r\n      const fromData = await getFireText(`home_txt/${homeId}`);\r\n      if (fromData === undefined) {\r\n        alert('이동에 실패했습니다.[code:210]');\r\n        return;\r\n      }\r\n      if (fromData.fullIndex === undefined) {\r\n        alert('이동에 실패했습니다.[code2120]');\r\n        return;\r\n      }\r\n      // console.log('onMoveSubmit.fromData=', fromData);\r\n\r\n      // 트리 정보 읽기\r\n      const treeData = await getFireText(`home/${fromData.fullIndex}`);\r\n      // console.log('onMoveSubmit.treeData=', treeData);\r\n      treeData.fullIndex = `${toData.fullIndex}/sub/${homeId}`;\r\n\r\n      // 저장\r\n      setHome(`${toData.fullIndex}/sub/${homeId}`, treeData);\r\n\r\n      // 삭제\r\n      setHome(fromData.fullIndex, null);\r\n    } catch (e) {\r\n      // console.log('catch', e);\r\n    } finally {\r\n      setMoveOpen(false);\r\n    }\r\n  };\r\n\r\n  //새글 저장 처리\r\n  const onNewSubmit = async (values, imageList, files) => {\r\n    // console.log('onNewSubmit.values', values);\r\n    //트리뷰 타이틀 수정\r\n    // console.log('onNewSubmit.fullIndex', fullIndex);\r\n\r\n    const locate = `home_txt/`;\r\n\r\n    // 이미지 저장\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i].object;\r\n      const ext = getExtensionOfFilename(file.name);\r\n      // console.log('onNewSubmit.file.name', file.name, 'ext=', ext);\r\n\r\n      // 이미지 형식\r\n      const postData = {\r\n        ext: ext,\r\n        name: file.name,\r\n        use: 'Y',\r\n      };\r\n\r\n      // Get a key for a new Post.\r\n      const newKey = push(child(ref(firebaseDB), locate + 'image')).key;\r\n      // console.log('onNewSubmit.image.newKey', newKey);\r\n\r\n      set(ref(firebaseDB, locate + `image/${newKey}`), postData);\r\n\r\n      const storageRef = await storegeRef(\r\n        firebaseStorage,\r\n        `home/${homeId}/${newKey}.${ext}`\r\n      );\r\n      // storageRef.put(file);\r\n      const result = await uploadBytes(storageRef, file);\r\n      // console.log('onNewSubmit.uploadBytes', result);\r\n    }\r\n    // end of 이미지 저장\r\n\r\n    // 메모 내용 새키 추가\r\n    const newKey = push(child(ref(firebaseDB), locate)).key;\r\n    // console.log('onNewSubmit.newKey', newKey);\r\n\r\n    set(ref(firebaseDB, locate + newKey + '/title'), values.edTitle);\r\n    set(ref(firebaseDB, locate + newKey + '/memo'), values.content);\r\n    set(ref(firebaseDB, locate + newKey + '/date'), values.edDate);\r\n    set(ref(firebaseDB, locate + newKey + '/gbn'), values.edGbn);\r\n\r\n    // 트리 제목 저장\r\n    if (fullIndex !== undefined) {\r\n      set(\r\n        ref(firebaseDB, `home/${fullIndex}/sub/${newKey}/title`),\r\n        values.edTitle\r\n      );\r\n    }\r\n\r\n    navigate(`/homemng/${newKey}`);\r\n    newMode.current = false;\r\n    setEditMode(false);\r\n    onReload();\r\n  }; // end of onNewSubmit\r\n\r\n  // 저장 처리\r\n  const onPostSubmit = async (values, imageList, files) => {\r\n    console.log('onPostSubmit.values', values);\r\n    // console.log('onPostSubmit.add.files', files);\r\n\r\n    const locate = `home_txt/${homeId}/`;\r\n\r\n    console.log('onPostSubmit.imageList', imageList);\r\n    // 서버 이미지 삭제\r\n    if (imageList !== undefined) {\r\n      for (let i = 0; i < imageList.length; i++) {\r\n        const file = imageList[i];\r\n        if (file.del === 'Y') {\r\n          set(ref(firebaseDB, locate + `image/${file.key}`), null);\r\n\r\n          const storageRef = await storegeRef(\r\n            firebaseStorage,\r\n            `home/${homeId}/${file.key}.${file.ext}`\r\n          );\r\n\r\n          // Delete the file\r\n          deleteObject(storageRef)\r\n            .then(() => {\r\n              // console.log('deleteObject');\r\n              // File deleted successfully\r\n            })\r\n            .catch((error) => {\r\n              // console.log('deleteObject.error=', error);\r\n              // Uh-oh, an error occurred!\r\n            });\r\n        }\r\n        // setImageList(imageList);\r\n      }\r\n    }\r\n\r\n    // 이미지 저장\r\n    console.log('onPostSubmit.files=', files);\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i].object;\r\n      const ext = getExtensionOfFilename(file.name);\r\n      // console.log('onPostSubmit.file.name', file.name);\r\n      // console.log('onPostSubmit.ext', ext);\r\n\r\n      // 이미지 형식\r\n      const postData = {\r\n        ext: ext,\r\n        name: file.name,\r\n        use: 'Y',\r\n      };\r\n\r\n      // Get a key for a new Post.\r\n      const newKey = push(child(ref(firebaseDB), locate + 'image')).key;\r\n      // console.log('onPostSubmit.newKey', newKey);\r\n\r\n      set(ref(firebaseDB, locate + `image/${newKey}`), postData);\r\n\r\n      const storageRef = await storegeRef(\r\n        firebaseStorage,\r\n        `home/${homeId}/${newKey}.${ext}`\r\n      );\r\n      // storageRef.put(file);\r\n      const result = await uploadBytes(storageRef, file);\r\n      // console.log('onPostSubmit.uploadBytes', result);\r\n    }\r\n    // end of 이미지 저장\r\n\r\n    // console.log('onPostSubmit.edTitle=', values.edTitle);\r\n    await set(ref(firebaseDB, locate + 'title'), values.edTitle);\r\n    await set(ref(firebaseDB, locate + 'memo'), values.content);\r\n    await set(ref(firebaseDB, locate + 'date'), values.edDate);\r\n    await set(ref(firebaseDB, locate + 'gbn'), values.edGbn);\r\n\r\n    //트리뷰 타이틀 수정\r\n    console.log('onPostSubmit.fullIndex', fullIndex);\r\n    if (fullIndex === undefined) {\r\n      const fullPath = await getFireText(`${locate}fullIndex`);\r\n      if (fullPath !== undefined) {\r\n        await set(ref(firebaseDB, `home/${fullPath}/title`), values.edTitle);\r\n      }\r\n    } else {\r\n      await set(ref(firebaseDB, `home/${fullIndex}/title`), values.edTitle);\r\n    }\r\n\r\n    /* \r\n    https://sinyproject.firebaseio.com\r\n    memo/I3cTgdCxwjhBBno4mtZYvnODPJu1/-MghXvrWe1bMU9G73QDf/sub/-MghY6R88j4HO4jyYWu5/title\r\n    memo/I3cTgdCxwjhBBno4mtZYvnODPJu1/-MghXvrWe1bMU9G73QDf/-MghY6R88j4HO4jyYWu5/title\r\n*/\r\n    //const title = ref(firebaseDB, `home_txt/${homeId}/memo`);\r\n    //console.log('onPostSubmit.title', props.content);\r\n    newMode.current = false;\r\n    setEditMode(false);\r\n    onReload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveSettings({ ...settings, nodeId: homeId });\r\n    setEditMode(false);\r\n    //전체경로 저장\r\n    setHomeFullIndex(homeId, fullIndex);\r\n    setFireId(`home_txt/${homeId}`, `home/${homeId}`, searchWord.current);\r\n  }, [homeId, user]);\r\n\r\n  if (homeId === '' || user === undefined) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"back-to-top-anchor\"></div>\r\n      <TitleItem>{detailTitle.current}</TitleItem>\r\n      <Suspense fallback={<Loading />}>\r\n        <Container className=\"container\" sx={{ p: 0, width: '100%' }}>\r\n          {!editMode && (\r\n            <HomeMngTopButton\r\n              onEdit={onEditMode}\r\n              onNewMemo={onNewMemo}\r\n              onMove={onMove}\r\n              onDelete={onDelete}\r\n            />\r\n          )}\r\n          {editMode && (\r\n            <HtmlEditor\r\n              newMode={newMode.current}\r\n              onPostSubmit={onPostSubmit}\r\n              onNewSubmit={onNewSubmit}\r\n              onCancel={onNotEditMode}\r\n              title={detailTitle.current}\r\n              gbn={gbn.current}\r\n              date={date.current}\r\n              content={detailText}\r\n              imageList={image}\r\n            />\r\n          )}\r\n\r\n          {/* overflow: 'hidden', overflowY: 'auto', maxHeight: 500 */}\r\n          <Box sx={{ my: 2, overflow: 'hidden', overflowX: 'auto' }}>\r\n            {/* <PostDetailPage postData={detailText} /> */}\r\n            {gbn.current}\r\n            <HtmlText show={!editMode} text={detailText} />\r\n            {!editMode && <SinyImageList imageList={image} />}\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <CircularProgress sx={{ mt: 5 }} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <MemoMoveModal\r\n            userId={user.uid}\r\n            open={moveOpen}\r\n            data={props.data}\r\n            onClose={() => setMoveOpen(false)}\r\n            onPost={onMoveSubmit}\r\n          />\r\n        </Container>\r\n      </Suspense>\r\n      <ScrollToTop {...props} id={'#back-to-top-anchor'}>\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollToTop>\r\n    </>\r\n  );\r\n};\r\n","import Box from '@mui/material/Box';\r\nimport {\r\n  child,\r\n  push,\r\n  ref,\r\n  set\r\n} from 'firebase/database';\r\nimport { ref as storegeRef, uploadBytes } from 'firebase/storage';\r\nimport * as React from 'react';\r\nimport { Suspense, useEffect, useRef, useState } from 'react';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport { Loading } from '../../components/Loading';\r\nimport { MemoTreeView } from '../../components/MemoTreeView';\r\nimport { LoginDisplay } from '../../components/auth/LoginDisplay';\r\nimport HtmlEditor from '../../components/edit/HtmlEditor';\r\nimport SinyTree from '../../components/tree/SinyTree';\r\nimport { setFireData, setNewMemoKey } from '../../firebase/fireDatabase';\r\nimport {\r\n  firebaseDB,\r\n  firebaseStorage\r\n} from '../../firebase/firebase';\r\nimport { useFireUser } from '../../firebase/useFireUser';\r\nimport { useTreeData } from '../../firebase/useTreeData';\r\nimport { CommonLayout } from '../../layout/CommonLayout';\r\nimport getExtensionOfFilename from '../../util/getExtensionOfFilename';\r\nimport useWindowDimensions from '../../util/useWindowDimensions';\r\nimport { MemoMain } from '../memo/MemoMain';\r\nimport { HomeMngDetail } from './HomeMngDetail';\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst HomeMng = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const { user } = useFireUser();\r\n  const [newMode, setNewMode] = useState(false);\r\n  const searchWord = useRef();\r\n\r\n  const [homeData] = useTreeData(`home`);\r\n\r\n  const [homeId, setHomeId] = useState('');\r\n  const fullIndex = useRef();\r\n\r\n  //const { data: treeData, isPending } = useTreeData();\r\n  //const [treeData, setTreeData]  = useState();\r\n\r\n  useEffect(() => {}, [user]);\r\n\r\n  // useEffect(() => {\r\n  //   getTreeData(uid);\r\n  // }, [uid]);\r\n\r\n  // 트리뷰 선택\r\n  const onDetail = (id, fIdx) => {\r\n    // console.log('homeId=', id, fIdx);\r\n    fullIndex.current = fIdx;\r\n    setHomeId(id);\r\n    navigate(`/homemng/${id}`, { state: { fullIndex: fIdx } });\r\n    // <Link to=\"new-path\" state={{ some: \"value\" }} />\r\n    // navigate(\"/\", { state: { cardId: cardId } });\r\n\r\n    // const location = useLocation();\r\n    // const { cardId } = location.state;\r\n  };\r\n\r\n  //새글버튼 클릭\r\n  const onNewHomeBtn = () => {\r\n    // console.log('onNewHomeBtn.fullIndex', fullIndex);\r\n    setNewMode(true);\r\n  };\r\n\r\n  //조회버튼 클릭\r\n  const onSearchDataBtn = (word) => {\r\n    searchWord.current = word;\r\n  };\r\n\r\n  //취소 버튼 클릭\r\n  const onCancel = () => {\r\n    //console.log('onNotEdit');\r\n    setNewMode(false);\r\n  };\r\n\r\n  //최상위 새글 저장 처리\r\n  const onNewSubmit = async (values, imageList, files) => {\r\n    // console.log('onNewSubmit.values', values);\r\n\r\n    const locate = `home_txt/${user.uid}/`;\r\n\r\n    // 이미지 저장\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files[i].object;\r\n      const ext = getExtensionOfFilename(file.name);\r\n      // console.log('onNewSubmit.file.name', file.name, 'ext=', ext);\r\n\r\n      // 이미지 형식\r\n      const postData = {\r\n        ext: ext,\r\n        name: file.name,\r\n        use: 'Y',\r\n      };\r\n\r\n      // Get a key for a new Post.\r\n      const newKey = push(child(ref(firebaseDB), locate + 'image')).key;\r\n      // console.log('onNewSubmit.image.newKey', newKey);\r\n\r\n      set(ref(firebaseDB, locate + `image/${newKey}`), postData);\r\n\r\n      const storageRef = await storegeRef(\r\n        firebaseStorage,\r\n        `home/${homeId}/${newKey}.${ext}`\r\n      );\r\n      // storageRef.put(file);\r\n      const result = await uploadBytes(storageRef, file);\r\n      // console.log('onNewSubmit.uploadBytes', result);\r\n    }\r\n    // end of 이미지 저장\r\n\r\n    // 메모 내용 새키 추가\r\n    const newKey = setNewMemoKey(locate);\r\n    // console.log('onNewSubmit.newKey', newKey);\r\n\r\n    //새메모 저장 내용 설정\r\n    const newHomeText = {\r\n      title: values.edTitle,\r\n      date: values.edDate,\r\n      gbn: values.edGbn,\r\n      memo: values.content,\r\n      fullIndex: newKey,\r\n      up: newKey,\r\n      bookmark: 'N',\r\n    };\r\n    setFireData(`${locate}${newKey}`, newHomeText);\r\n\r\n    // 트리 저장 형식\r\n    // property:\"f\" / \"m\"\r\n    const treeData = {\r\n      gbn: '',\r\n      property: 'm',\r\n      title: values.title,\r\n      up: newKey,\r\n    };\r\n    // 트리 제목 저장\r\n    setFireData(`home/${newKey}`, treeData);\r\n\r\n    // 모드변경\r\n    setNewMode(false);\r\n  }; // end of onNewSubmit\r\n\r\n  const onSelected = (id) => {\r\n    // console.log('onSelected=', id);\r\n    setHomeId(id);\r\n  };\r\n\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n\r\n  if (user.uid !== 'I3cTgdCxwjhBBno4mtZYvnODPJu1') {\r\n    navigate('/');\r\n  }\r\n\r\n  const sideContents = (\r\n    <Box sx={{ minHeight: 110, flexGrow: 1, minWidth: 100, maxHeight: height }}>\r\n      <LoginDisplay />\r\n      <MemoTreeView\r\n        onNewMemoBtn={onNewHomeBtn}\r\n        onSearchDataBtn={onSearchDataBtn}\r\n      />\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          minWidth: 100,\r\n          minHeight: 110,\r\n          maxHeight: height - 220,\r\n          height: height - 220,\r\n        }}\r\n      >\r\n        <Suspense fallback={<Loading />}>\r\n          <SinyTree\r\n            data={homeData}\r\n            onDetail={onDetail}\r\n            maxHeight={height - 150}\r\n          />\r\n        </Suspense>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  // mui xs sm md lg xl\r\n  return (\r\n    <CommonLayout\r\n      title={'홈 관리'}\r\n      drawerWidth={drawerWidth}\r\n      width={width}\r\n      sideContents={sideContents}\r\n    >\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <MemoMain\r\n              searchWord={searchWord.current}\r\n              data={homeData}\r\n              onNewMemoBtn={onNewHomeBtn}\r\n              title=\"홈페이지 관리\"\r\n              // uid={uid}\r\n              // memoId={memoId}\r\n              // fullIndex={fullIndex.current}\r\n            />\r\n          }\r\n        ></Route>\r\n        <Route\r\n          path=\"/:homeId\"\r\n          element={\r\n            <HomeMngDetail searchWord={searchWord.current} data={homeData} />\r\n          }\r\n        ></Route>\r\n      </Routes>\r\n      {newMode && (\r\n        <HtmlEditor\r\n          show={newMode}\r\n          newMode={newMode.current}\r\n          onPostSubmit={onNewSubmit}\r\n          onNewSubmit={onNewSubmit}\r\n          onCancel={onCancel}\r\n          title={''}\r\n          content={''}\r\n          imageList={[]}\r\n        />\r\n      )}\r\n    </CommonLayout>\r\n  );\r\n};\r\n\r\nexport default HomeMng;\r\n","import AniButton from '../../components/button/AniButton';\r\nimport { LinkItem } from '../../components/item/LinkItem';\r\nimport { useFireUser } from '../../firebase/useFireUser';\r\n\r\nexport const MemoMain = (props) => {\r\n  const { user } = useFireUser();\r\n\r\n  //새 메모 추가\r\n  function onNewMemoBtn() {\r\n    // memoDataLoad();\r\n    props.onNewMemoBtn();\r\n    return false;\r\n  }\r\n\r\n  const homemng =\r\n  user && user.uid === 'I3cTgdCxwjhBBno4mtZYvnODPJu1' ? (\r\n    <LinkItem to=\"/homemng\"> 홈페이지 관리</LinkItem>\r\n  ) : (\r\n    ''\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h3>{props.title}</h3>\r\n      사이드 메뉴에서\r\n      <AniButton\r\n        disableElevation\r\n        fullWidth\r\n        // size=\"large\"\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        color=\"success\"\r\n        onClick={onNewMemoBtn}\r\n      >\r\n        새글\r\n      </AniButton>\r\n      버튼을 사용해 메모를 작성합니다.\r\n      {homemng}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MemoMain"],"names":["HomeMngTopButton","props","_jsxs","Box","sx","flexGrow","my","width","display","flexDirection","alignItems","alignContent","justifyContent","textAlign","children","_jsx","AniButton","type","size","variant","color","onClick","onEdit","onNewMemo","onMove","onDelete","HomeMngDetail","_location$state","title","detailTitle","gbn","date","text","detailText","image","setFireId","isLoading","onReload","useFireText","editMode","setEditMode","useState","moveOpen","setMoveOpen","navigate","useNavigate","newMode","useRef","searchWord","current","homeId","useParams","location","useLocation","fullIndex","state","user","useFireUser","settings","saveSettings","useSettings","useEffect","nodeId","setHomeFullIndex","concat","undefined","_Fragment","id","TitleItem","Suspense","fallback","Loading","Container","className","p","onEditMode","window","confirm","async","data","getFireText","alert","treeLocate","set","ref","firebaseDB","handleDelete","HtmlEditor","onPostSubmit","values","imageList","files","console","log","locate","i","length","file","del","key","storageRef","storegeRef","firebaseStorage","ext","deleteObject","then","catch","error","object","getExtensionOfFilename","name","postData","use","newKey","push","child","uploadBytes","edTitle","content","edDate","edGbn","fullPath","onNewSubmit","onCancel","onNotEditMode","overflow","overflowX","HtmlText","show","SinyImageList","CircularProgress","mt","MemoMoveModal","userId","uid","open","onClose","onPost","toData","moveId","fromData","treeData","setHome","e","ScrollToTop","Fab","KeyboardArrowUpIcon","setNewMode","homeData","useTreeData","setHomeId","onNewHomeBtn","setNewMemoKey","newHomeText","memo","up","bookmark","setFireData","property","height","useWindowDimensions","sideContents","minHeight","minWidth","maxHeight","LoginDisplay","MemoTreeView","onNewMemoBtn","onSearchDataBtn","word","SinyTree","onDetail","fIdx","CommonLayout","drawerWidth","Routes","Route","path","element","MemoMain","homemng","LinkItem","to","disableElevation","fullWidth"],"sourceRoot":""}