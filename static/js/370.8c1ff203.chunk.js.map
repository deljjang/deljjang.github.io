{"version":3,"file":"static/js/370.8c1ff203.chunk.js","mappings":"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","sources":["components/BibleSearchTop.js","views/bible/BibleSearch.js"],"sourcesContent":["import { Button, Grid, Input, TextField } from '@mui/material';\r\nimport { useRef } from 'react';\r\nimport AniButton from './button/AniButton';\r\n\r\n//트리뷰 상단 : 입력창, 버튼2개\r\nexport const BibleSearchTop = (props) => {\r\n  const edSearch = useRef(null);\r\n\r\n  /**\r\n   * 조회 버튼 클릭\r\n   */\r\n  function onSearchDataBtn() {\r\n    // memoDataLoad();\r\n    // console.log('onSearchDataBtn', edSearch);\r\n    props.onSearchDataBtn(edSearch.current.value);\r\n  }\r\n\r\n  //엔터 클릭시\r\n  function edSearchKeyPress(e) {\r\n    if (e.which === 13) {\r\n      onSearchDataBtn();\r\n    }\r\n  }\r\n\r\n  return (\r\n    /*     <Box\r\n      sx={{\r\n        // display: 'block',\r\n        // width: '100%',\r\n        // alignItems: 'center',\r\n        // justifyContent: 'center',\r\n        bgcolor: 'background.default',\r\n        color: 'text.primary',\r\n        borderRadius: 1,\r\n        p: 3,\r\n      }}\r\n    > */\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <TextField //OutlinedInput\r\n            id=\"edSearch\"\r\n            type=\"edSearch\"\r\n            // value={values.usrId}\r\n            name=\"edSearch\"\r\n            // ref={edSearch}\r\n            inputRef={edSearch}\r\n            variant=\"standard\"\r\n            // onBlur={handleBlur}\r\n            // onChange={handleChange}\r\n            placeholder=\"Enter Search...\"\r\n            fullWidth\r\n            sx={{ pt: 0, pl: 2, pr: 2, pb: 1 }}\r\n            onKeyDown={edSearchKeyPress}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AniButton\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onClick={onSearchDataBtn}\r\n              color=\"success\"\r\n            >\r\n              조회\r\n          </AniButton>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import { onValue, orderByChild, query, ref, get } from '@firebase/database';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Fab from '@mui/material/Fab';\r\nimport React, { useState } from 'react';\r\nimport { firebaseDB } from '../../firebase/firebase';\r\nimport { Grid } from '@mui/material';\r\nimport Container from '@mui/material/Container';\r\nimport { BibleSearchTop } from '../../components/BibleSearchTop';\r\nimport { HtmlText } from '../../components/item/HtmlText';\r\nimport { LinkItem } from '../../components/item/LinkItem';\r\nimport { ScrollToTop } from '../../components/screen/ScrollToTop';\r\nimport { TitleItem } from '../../components/item/TitleItem';\r\nimport bibleJson from '../../data/bibleJson';\r\nimport '../MemoDetail.css';\r\n\r\n//{cd1: '1', cd2: '14', cd3: '31', cd4: '15', txt: '그의 수하의 에덴과 미냐민...}\r\nconst SearchList = (props) => {\r\n  if (props.bibleList === undefined || props.bibleList === null) return;\r\n\r\n  const bileTmp = bibleJson;\r\n\r\n  // console.log('SearchList=', props.bibleList.length, props.bibleList);\r\n  //  {cd1: '2', cd2: '9', cd3: '5', cd4: '6', txt: \"그리스도 <span class='lightext'>예수</span> 안에서는 할례나 무할례나 효력이 없으되 사랑으로써 역사하는 믿음뿐이니라\", …}\r\n\r\n  return props.bibleList.map((item, idx) => {\r\n    // console.log('SearchList.item=', item);\r\n    // console.log('SearchList.bileTmp=', bileTmp);\r\n    // console.log('SearchList.bibleJson=', bibleJson['b'+item.cd1]);\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        columns={{ xs: 5, sm: 6, md: 10, lg: 12 }}\r\n        key={idx}\r\n      >\r\n        <Grid item xs={1} md={1}>\r\n          {bibleJson[item.cd1][item.cd2].nm2}\r\n          {item.cd3}:{item.cd4}\r\n        </Grid>\r\n        <Grid item xs={4} sm={5} md={9} lg={11}>\r\n          <LinkItem\r\n            to={`/bible/${item.cd1}_${item.cd2}_${item.cd3}`}\r\n            state={{ cd4: item.cd4, word: props.word }}\r\n          >\r\n            <HtmlText show={true} text={item.txt} />\r\n          </LinkItem>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  });\r\n};\r\n\r\nconst BibleSearch = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bibleList, setBibleList] = useState();\r\n  const [searchWord, setSearchWord] = useState();\r\n\r\n  //조회버튼 클릭\r\n  const onSearchDataBtn = (word) => {\r\n    // console.log('onSearchDataBtn=', word);\r\n    getBibleData(word);\r\n  };\r\n\r\n  //파이어베이스 해당 데이터 읽기\r\n  const getBibleData = (word) => {\r\n    // console.log('getTreeDataText.word=' + word);\r\n    if (word === '') {\r\n      alert('검색어를 입력해 주세요');\r\n      return;\r\n    }\r\n    setSearchWord(word);\r\n    setBibleList([]);\r\n    setIsLoading(true);\r\n\r\n    const bibleRef = query(\r\n      ref(firebaseDB, `bible_txt/`),\r\n      orderByChild('title')\r\n    );\r\n    onValue(bibleRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      // console.log('getTreeDataText.data=', data);\r\n\r\n      const result = new Array();\r\n      if (snapshot.exists()) {\r\n        for (let key in data) {\r\n          //console.log('for', key, data[key]);\r\n          let memo = data[key];\r\n          memo.id = key;\r\n\r\n          //{cd1: '1', cd2: '14', cd3: '31', cd4: '15', txt: '그의 수하의 에덴과 미냐민...}\r\n          let tmp = memo.txt + '';\r\n          if (tmp.indexOf(word) > -1) {\r\n            const regexAllCase = new RegExp(word, 'gi');\r\n            memo.txt = tmp.replace(\r\n              regexAllCase,\r\n              `<span class='lightext'>${word}</span>`\r\n            );\r\n            result.push(memo);\r\n          }\r\n        }\r\n      }\r\n      setBibleList(result);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <BibleSearchTop onSearchDataBtn={onSearchDataBtn} />\r\n      <TitleItem>\r\n        검색 결과 : {bibleList && bibleList.length && bibleList.length}\r\n      </TitleItem>\r\n      <Container sx={{ p: 0 }}>\r\n        {isLoading && (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <CircularProgress sx={{ mt: 5 }} />\r\n          </Box>\r\n        )}\r\n      </Container>\r\n      <SearchList bibleList={bibleList} word={searchWord} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BibleSearch;\r\n"],"names":["BibleSearchTop","props","edSearch","useRef","onSearchDataBtn","current","value","_jsx","_Fragment","children","_jsxs","Grid","container","spacing","item","xs","TextField","id","type","name","inputRef","variant","placeholder","fullWidth","sx","pt","pl","pr","pb","onKeyDown","e","which","AniButton","onClick","color","SearchList","undefined","bibleList","map","idx","columns","sm","md","lg","bibleJson","cd1","cd2","nm2","cd3","cd4","LinkItem","to","concat","state","word","HtmlText","show","text","txt","isLoading","setIsLoading","useState","setBibleList","searchWord","setSearchWord","getBibleData","alert","bibleRef","query","ref","firebaseDB","orderByChild","onValue","snapshot","data","val","result","Array","exists","key","memo","tmp","indexOf","regexAllCase","RegExp","replace","push","React","TitleItem","length","Container","p","Box","display","flexDirection","alignItems","CircularProgress","mt"],"sourceRoot":""}