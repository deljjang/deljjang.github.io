{"version":3,"file":"static/js/529.689646fb.chunk.js","mappings":"yOAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,oLACD,UCFJ,GAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,sDACD,S,uMCEG,MCiBDC,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAcE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACzCE,gBAAwC,SAAvBD,EAAME,QAAQC,KAAkB,UAAY,UAC1DH,EAAMI,WAAWC,MACpBC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,SACXC,MAAOT,EAAME,QAAQQ,KAAKC,UAC3B,IAKYC,EAAcC,IAAW,IAADC,EACnC,MAAM,OAAEC,GAAWF,GACZG,EAAUC,GD9BSC,KAC1B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAASH,IAC5BI,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC7BG,EAAMC,IAAYJ,EAAAA,EAAAA,aAE1BK,EAAAA,EAAAA,YAAU,KAEM,KAAVP,GACFQ,EAAQR,EACV,GACC,CAACA,EAAOK,IAEX,MAAMG,EAAWR,IACf,MAAMS,GAAUC,EAAAA,EAAAA,KACdC,EAAAA,EAAAA,IAAIC,EAAAA,GAAYZ,IAChBa,EAAAA,EAAAA,IAAa,WAKfC,EAAAA,EAAAA,IAAQL,GAAUM,IAEhB,IAAKA,EAASC,SAAU,OAExB,MAAMC,EAAOF,EAASG,MAIhBC,EAAO,GACb,IAAK,IAAIC,KAAKH,EAAM,CAClB,MAAMI,EAAOJ,EAAKG,GAClBC,EAAKC,GAAKF,EAEVC,EAAKE,KAAI,GAAAC,OAAMH,EAAKI,IAAG,KAAAD,OAAIH,EAAKK,KAAI,KAAAF,OAAIH,EAAKM,QAGjC,KAATtB,QAAwBuB,IAATvB,IAINgB,EAAKQ,KAAO,IACdC,cAAcC,QAAQ1B,EAAKyB,gBAAkB,IAJrDX,EAAKa,KAAKX,EAQd,CAEA,MAAMI,EAAMN,EAAKI,MAAK,CAACU,EAAGC,IAAOD,EAAEV,KAAOW,EAAEX,KAAO,GAAK,IAAIY,QAAQd,GAAsB,MAAbA,EAAKI,MAE5EW,EAAMjB,EAAKI,MAAK,CAACU,EAAGC,IAAOD,EAAEV,KAAOW,EAAEX,MAAQ,EAAI,IAAIY,QAAQd,GAAsB,MAAbA,EAAKI,MAOlFrB,EAAU,IAAIqB,KAAQW,GAAK,GAC3B,EAGJ,MAAO,CAACjC,EAAQF,EAAUK,EAAQ,EC9BD+B,CAAY,IAMvCC,EAAUC,EAAAA,GAASC,MAAMC,QAAQ,cAAcC,SAAS,cAGxDC,EAAgB,CACpBC,QAAS,GACTC,OAAQP,IAGJ,SACJQ,EAAQ,aACRC,EAAY,MACZC,EAAK,UAGLC,EAAS,SAETC,EAIAC,WAAW,OAAEC,EAAM,aAAEC,EAAY,YAAEC,KACjCC,EAAAA,EAAAA,IAAQ,CACVvE,KAAM,UACN2D,cAAeA,IAGXa,GAASC,EAAAA,EAAAA,WAEflD,EAAAA,EAAAA,YAAU,KAGRuC,EAAS,UAAW,CAClBY,SAAU,kEACVC,UAAW,CACTC,MAAO,EACPC,QAAS,sEAGbf,EAAS,SAAU,CAAEY,UAAU,EAAMC,UAAW,IAAK,GACpD,KAEHpD,EAAAA,EAAAA,YAAU,UAEOqB,IAAXhC,GAAsBE,EAAa,QAAD0B,OAAS5B,GAAS,GACvD,CAACA,IAqBJ,MAAMkE,EAAoBA,KACxBpE,EAAMoE,mBAAmB,EAG3B,QAAelC,IAAXhC,EACF,OACEmE,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,OACPC,UAAW,OACXC,aAAc,SACdC,SAAA,EAEFhG,EAAAA,EAAAA,KAACE,EAAI,CAAA8F,SAAC,uFACNhG,EAAAA,EAAAA,KAACiG,EAAAA,EAAS,CACRC,KAAK,SACLC,KAAK,QACLC,QAAQ,WACRrF,MAAM,UACNsF,GAAI,CAAEC,GAAI,IACVC,QAAShB,EAAkBS,SAC5B,0BA0DP,SAASQ,EAAS9D,EAAM+D,GACtBC,QAAQC,IAAI,iBAAkBjE,GAC9BgE,QAAQC,IAAI,cAAeF,GAC3BC,QAAQC,IAAI,mBAAoB1B,EAAO2B,SACvCF,QAAQC,IAAI,mBAAoB9B,GAKhC,MAAMrD,EAAM,QAAAyB,OAAW5B,EAAM,KAG7B,QAAuBgC,IAAnB4B,EAAO2B,QAAuB,CAChC,MAAMC,GAASpD,EAAAA,EAAAA,KAAKqD,EAAAA,EAAAA,KAAM1E,EAAAA,EAAAA,IAAIC,EAAAA,IAAab,IAASuF,IACpDL,QAAQC,IAAI,kBAAmBE,GAC/B5B,EAAO2B,QAAUC,CACnB,EAGAG,EAAAA,EAAAA,KAAI5E,EAAAA,EAAAA,IAAIC,EAAAA,GAAYb,EAASyD,EAAO2B,QAAU,UAAWlE,EAAK2B,UAE9D2C,EAAAA,EAAAA,KAAI5E,EAAAA,EAAAA,IAAIC,EAAAA,GAAYb,EAASyD,EAAO2B,QAAU,SAAUlE,EAAK4B,SAE7D0C,EAAAA,EAAAA,KAAI5E,EAAAA,EAAAA,IAAIC,EAAAA,GAAYb,EAASyD,EAAO2B,QAAU,QAAS,KAEvD3B,EAAO2B,aAAUvD,EAGjBoB,EAAM,CACJJ,QAAS,GACTC,OAAQP,GAEZ,CAEA,OACEyB,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAjB,SAAA,EACER,EAAAA,EAAAA,MAAC0B,EAAAA,EAAG,CAACb,GAAI,CAAER,MAAO,OAAQsB,SAAU,EAAGC,EAAG,GAAIpB,SAAA,EAC9ChG,EAAAA,EAAAA,KAAA,OAAK+C,GAAG,wBACN/C,EAAAA,EAAAA,KAAA,QAAMwG,SAAUhC,EAAagC,GAxChB3B,GAAW6B,QAAQW,MAAMxC,KAwCYmB,UAShDR,EAAAA,EAAAA,MAAC8B,EAAAA,GAAI,CAACC,WAAS,EAAC1G,QAAS,EAAG2G,QAAS,CAAEC,GAAI,GAAIC,GAAI,IAAK1B,SAAA,EAItDhG,EAAAA,EAAAA,KAACsH,EAAAA,GAAI,CAACxE,MAAI,EAAC2E,GAAI,GAAGzB,UAChBhG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAS,CACRzB,KAAK,OACLT,MAAO,CAAEmC,WAAY,OACrBC,WAAS,EACTC,YAAY,kBACRvD,EAAS,UACb6B,QAAQ,gBAGZpG,EAAAA,EAAAA,KAACsH,EAAAA,GAAI,CAACxE,MAAI,EAAC2E,GAAI,EAAGM,GAAI,GAAG/B,UACvBR,EAAAA,EAAAA,MAAC0B,EAAAA,EAAG,CACFb,GAAI,CACFX,QAAS,OACTE,WAAY,SACZoC,eAAgB,UAChBhC,SAAA,EAEFhG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAS,CACRE,WAAS,EACTpC,MAAO,CAAEmC,WAAY,OAGrBE,YAAY,gBACRvD,EAAS,WAEb6B,QAAQ,WACRiB,QAASxC,EAAOR,WAIlBrE,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,CACTxC,MAAO,CAAEK,UAAW,QACpB,aAAW,WACXS,QAAUE,GAjHRA,KAChBA,EAAEyB,iBACFxB,QAAQC,IAAI,kBACZlC,EAAM,CACJJ,QAAS,KAEXY,EAAO2B,aAAUvD,CAAS,EA2GI8E,CAAS1B,GAAGT,UAE5BhG,EAAAA,EAAAA,KAACoI,EAAM,CACL/B,GAAI,CACFtF,MAAO,2BASjBf,EAAAA,EAAAA,KAACsH,EAAAA,GAAI,CAACxE,MAAI,EAAC2E,GAAI,EAAGM,GAAI,EAAE/B,UACtBhG,EAAAA,EAAAA,KAACiG,EAAAA,EAAS,CACRG,QAAQ,WACRyB,WAAS,EACTtB,QAAUE,GArMxB4B,eAA0B5B,GACxBC,QAAQC,IAAI,qBAAsB9B,GAClC6B,QAAQC,IAAI,2BAA4B7B,GACxC4B,QAAQC,IAAI,qBAAsBjC,EAAU,WAC5CgC,QAAQC,IAAI,sBAAuBjC,EAAU,YAC7CgC,QAAQC,IAAI,0BAA2B5B,GAKvCP,EAAagC,EAAbhC,EACF,CA0L8B8D,GAChBvH,MAAM,UACNoF,KAAK,QACLoC,SAAUzD,EAAakB,SACxB,oBAIHhG,EAAAA,EAAAA,KAACsH,EAAAA,GAAI,CAACxE,MAAI,EAAC2E,GAAI,GAAIM,GAAI,GAAG/B,SACjB,OAANnB,QAAM,IAANA,GAAAA,EAAQR,SACPrE,EAAAA,EAAAA,KAAA,KAAGwI,UAAU,QAAOxC,SAAgB,QAAhB5E,EAAEyD,EAAOR,eAAO,IAAAjD,OAAA,EAAdA,EAAgBkE,UACpC,YAKD,OAARhE,QAAQ,IAARA,OAAQ,EAARA,EAAUmH,KAAI,CAAC3F,EAAM4F,KAElBlD,EAAAA,EAAAA,MAAA,OAAAQ,SAAA,EACER,EAAAA,EAAAA,MAAC0B,EAAAA,EAAG,CACFb,GAAI,CACFX,QAAS,OACTC,cAAe,MACfC,WAAY,SACZoC,eAAgB,iBAChBhC,SAAA,EAEFhG,EAAAA,EAAAA,KAAC2I,EAAAA,EAAU,CACTC,UAAW,MACXxC,QAAQ,QACRrF,MAAM,aACNiF,SAEClD,EAAKK,QAGRqC,EAAAA,EAAAA,MAAC0B,EAAAA,EAAG,CACFb,GAAI,CACFX,QAAS,OACTC,cAAe,MACfC,WAAY,SACZoC,eAAgB,iBAChBhC,SAAA,CAEY,MAAblD,EAAKI,MACJsC,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAjB,SAAA,EACEhG,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,CACT,aAAW,eACX1B,QAAUE,GAhKhBoC,EAACpC,EAAG3D,KAClB2D,EAAEyB,iBAEEY,OAAOC,QADE,uDAEX/B,EAAAA,EAAAA,KAAI5E,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,QAADY,OAAU5B,EAAM,KAAA4B,OAAIH,EAAKC,GAAE,SAAS,IACxD,EA2JoC8F,CAAQpC,EAAG3D,GAAMkD,UAEjChG,EAAAA,EAAAA,KAACgJ,EAAK,OAGRhJ,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,CACT,aAAW,OACX1B,QAAUE,GAhNjBwC,EAACxC,EAAG3D,KACjB2D,EAAEyB,iBACFxB,QAAQC,IAAI,eAAgB7D,GAS5B6B,EAAS,WACTF,EAAM,CACJJ,QAASvB,EAAKM,MACdkB,OAAQxB,EAAKK,OAKf8B,EAAO2B,QAAU9D,EAAKC,GACtB2D,QAAQC,IAAI,iBAAkB1B,EAAO2B,QAAQ,EA4LTqC,CAAOxC,EAAG3D,GAAMkD,UAEhChG,EAAAA,EAAAA,KAACkJ,EAAAA,EAAI,UAKXlJ,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,CACT,aAAW,SACX1B,QAAUE,GAzLX0C,EAAC1C,EAAG3D,KACnB2D,EAAEyB,iBAEEY,OAAOC,QADE,uDAEX/B,EAAAA,EAAAA,KAAI5E,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,QAADY,OAAU5B,EAAM,KAAA4B,OAAIH,EAAKC,KAAO,KACpD,EAoLgCoG,CAAS1C,EAAG3D,GAAMkD,UAElChG,EAAAA,EAAAA,KAACoJ,EAAAA,EAAM,CAAC/C,GAAI,CAAEtF,MAAO,iCAI3Bf,EAAAA,EAAAA,KAAC2I,EAAAA,EAAU,CACTC,UAAW,MACXxC,QAAQ,OACRrF,MAAM,aACNiF,SAEClD,EAAKM,SAERpD,EAAAA,EAAAA,KAACqJ,EAAAA,EAAO,MA5DAX,MAgEhB1I,EAAAA,EAAAA,KAACsJ,EAAAA,EAAW,IAAKnI,EAAO4B,GAAI,sBAAsBiD,UAChDhG,EAAAA,EAAAA,KAACuJ,EAAAA,EAAG,CAACxI,MAAM,UAAUoF,KAAK,QAAQ,aAAW,qBAAoBH,UAC/DhG,EAAAA,EAAAA,KAACwJ,EAAAA,EAAmB,YAMxBxJ,EAAAA,EAAAA,KAACqJ,EAAAA,EAAO,MACP,ECpVP,EAhCaI,KACX,MAAM,KAAEC,EAAI,kBAAEnE,IAAsBoE,EAAAA,EAAAA,KAYpC,OACEnE,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAjB,SAAA,EACEhG,EAAAA,EAAAA,KAAC4J,EAAAA,EAAY,KACbpE,EAAAA,EAAAA,MAACqE,EAAAA,EAAS,CAACC,SAAS,KAAKzD,GAAI,CAAEC,GAAI,GAAIN,SAAA,EACrChG,EAAAA,EAAAA,KAAC+J,EAAAA,EAAU,CAAC3G,MAAM,UAClBpD,EAAAA,EAAAA,KAACgK,EAAAA,SAAQ,CAACC,UAAUjK,EAAAA,EAAAA,KAACkK,EAAAA,EAAO,IAAIlE,UAC9BhG,EAAAA,EAAAA,KAACkB,EAAU,CACTG,OAAY,OAAJqI,QAAI,IAAJA,OAAI,EAAJA,EAAMS,IACd5E,kBAAmBA,UAIzBvF,EAAAA,EAAAA,KAACoK,EAAAA,EAAM,KACPpK,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,WACC,C","sources":["../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/Check.js","firebase/useTodoList.js","views/todo/TodoDetail.js","views/todo/Todo.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import { onValue, orderByChild, orderByKey, query, ref } from 'firebase/database';\r\nimport { useEffect, useState } from 'react';\r\nimport { firebaseDB } from './firebase';\r\n\r\n// 메모, 성경 트리 데이터 읽기\r\n// use :\r\n// const [result, setParam, setWord] = useTodoList('');\r\n// useTreeData(`todo/${uid}`)\r\nexport const useTodoList = (locate) => {\r\n  const [param, setParam] = useState(locate);\r\n  const [result, setResult] = useState([]);\r\n  const [ word, setWord ] = useState();\r\n\r\n  useEffect(() => {\r\n    // console.log('param=', param);\r\n    if (param !== '') {\r\n      getData(param);\r\n    }\r\n  }, [param, word]);\r\n\r\n  const getData = (param) => {\r\n    const memoRef = query(\r\n      ref(firebaseDB, param), // `memo_txt/${uid}`),\r\n      orderByChild('title'),\r\n      // equalTo('Y')\r\n      // orderByKey('title')\r\n    );\r\n\r\n    onValue(memoRef, (snapshot) => {\r\n      // console.log('snapshot', snapshot);\r\n      if (!snapshot.exists()) return;\r\n\r\n      const data = snapshot.val();\r\n      // console.log('useTodoList.data=', data);\r\n      // console.log('word=', word);\r\n\r\n      const temp = [];\r\n      for (let i in data) {\r\n        const item = data[i];\r\n        item.id = i;\r\n\r\n        item.sort = `${item.ing}_${item.date}_${item.title}`;\r\n\r\n        // 검색어가 없는 경우\r\n        if(word === '' || word === undefined) {\r\n          temp.push(item);          \r\n        } else {\r\n          // 검색어가 있는 경우\r\n          let tmp = item.memo + '';\r\n          if (tmp.toLowerCase().indexOf(word.toLowerCase()) > -1) {\r\n            temp.push(item);\r\n          }\r\n        }\r\n      }\r\n      // 진행중\r\n      const ing = temp.sort((a, b) => (a.sort > b.sort ? 1 : -1)).filter((item) => item.ing === '1');\r\n      // 종료\r\n      const end = temp.sort((a, b) => (a.sort > b.sort ? -1 : 1)).filter((item) => item.ing === '2');\r\n\r\n      // 문자 정렬 처리\r\n      // temp.sort((a, b) => (a.sort > b.title ? 1 : -1));\r\n      // temp.sort((a, b) => (a.sort > b.sort ? 1 : -1));\r\n\r\n      // console.log('useTreeData.temp=', temp);\r\n      setResult([...ing, ...end]);\r\n    });\r\n  };\r\n\r\n  return [result, setParam, setWord];\r\n};\r\n","import { Cancel, Check, Edit } from '@mui/icons-material';\r\nimport Delete from '@mui/icons-material/Delete';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Fab,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  styled\r\n} from '@mui/material';\r\nimport { child, push, ref, set } from 'firebase/database';\r\nimport { DateTime } from 'luxon';\r\nimport { useEffect, useRef } from 'react';\r\nimport {\r\n  useForm\r\n} from 'react-hook-form';\r\nimport AniButton from '../../components/button/AniButton';\r\nimport { ScrollToTop } from '../../components/screen/ScrollToTop';\r\nimport { firebaseDB } from '../../firebase/firebase';\r\nimport { useTodoList } from '../../firebase/useTodoList';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n// 추천글\r\n// react-hook-form/\r\n// https://tech.osci.kr/introduce-react-hook-form/\r\nexport const TodoDetail = (props) => {\r\n  const { userId } = props;\r\n  const [todoList, setTodoParam] = useTodoList('');\r\n  // const [todoList, setTodoParam, setWord] = useTodoList('');\r\n\r\n  // console.log('DateTime.toFormat=', DateTime.now().toFormat('yyyy-MM-dd'));\r\n  // const daytime = DateTime.now().setZone(\"Asia/Seoul\").toFormat('yyyy-MM-dd HH:mm:ss');\r\n  //DateTime.fromFormat(row.create_dt, 'yyyyMMddhhmmss').toFormat('yyyy/MM/dd hh:mm')\r\n  const daytime = DateTime.now().setZone('Asia/Seoul').toFormat('yyyy-MM-dd');\r\n  // console.log('daytime=', daytime);\r\n\r\n  const defaultValues = {\r\n    edTitle: '',\r\n    edDate: daytime,\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    // control,\r\n    // setValue,\r\n    getValues,\r\n    // watch,\r\n    setFocus,\r\n    // setState,\r\n    // Read the formState before render to subscribe the form state through the Proxy\r\n    // formState: { errors, isDirty, isSubmitting, touchedFields, submitCount },\r\n    formState: { errors, isSubmitting, submitCount },\r\n  } = useForm({\r\n    mode: 'submit ', // 'onChange',\r\n    defaultValues: defaultValues,\r\n  });\r\n\r\n  const todoId = useRef();\r\n\r\n  useEffect(() => {\r\n    // validation check\r\n    // 사용함수 : required, min, max, minLength, maxLength, pattern ...\r\n    register('edTitle', {\r\n      required: '해당 필드는 필수입니다.',\r\n      minLength: {\r\n        value: 3,\r\n        message: '3글자 이상 입력해주세요.',\r\n      },\r\n    });\r\n    register('edDate', { required: true, minLength: 10 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log('TodoDetail.useEffect.userId=', userId);\r\n    if (userId !== undefined) setTodoParam(`todo/${userId}`);\r\n  }, [userId]);\r\n\r\n  // console.log('TodoDetail.userId=', userId);\r\n  // console.log('TodoDetail.todoId=', todoId.current);\r\n  // console.log('TodoDetail.todoList=', todoList);\r\n  // handleSubmit(async (data) => await fetchAPI(data))\r\n\r\n  // 입력 버튼 클릭\r\n  async function onInputBtn(e) {\r\n    console.log('onInputBtn.errors=', errors);\r\n    console.log('onInputBtn.isSubmitting=', isSubmitting);\r\n    console.log('onInputBtn.edDate=', getValues('edDate'));\r\n    console.log('onInputBtn.edTitle=', getValues('edTitle'));\r\n    console.log('onInputBtn.submitCount=', submitCount);\r\n    // console.log('onInputBtn.handleSubmit=', handleSubmit);\r\n\r\n    // e.preventDefault();\r\n    // handleSubmit(async (data) => await onSubmit(data));\r\n    handleSubmit(onSubmit)();\r\n  }\r\n\r\n  const handleGoogleLogin = () => {\r\n    props.handleGoogleLogin();\r\n  };\r\n\r\n  if (userId === undefined) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          width: '100%',\r\n          marginTop: '50px',\r\n          marginBottom: '100px',\r\n        }}\r\n      >\r\n        <Item>로그인을 해야 이용가능합니다.</Item>\r\n        <AniButton\r\n          type=\"button\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mt: 30 }}\r\n          onClick={handleGoogleLogin}\r\n        >\r\n          로그인\r\n        </AniButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onEdit = (e, item) => {\r\n    e.preventDefault();\r\n    console.log('onEdit.item=', item);\r\n    // console.log('onEdit.edTitle=', edTitle.current);\r\n    // defaultValue={saveInputValue ? inputVal : null}\r\n    // console.log('onEdit.register=', register);\r\n\r\n    // setValue('edTitle', item.title);\r\n    // const value = getValues('edTitle');\r\n    // console.log('onEdit.value=', value);\r\n\r\n    setFocus('edTitle');\r\n    reset({\r\n      edTitle: item.title,\r\n      edDate: item.date,\r\n    });\r\n\r\n    // edTitle.current.value = item.title;\r\n    // edTitle.current.defaultValue = undefined;\r\n    todoId.current = item.id;\r\n    console.log('onEdit.todoId=', todoId.current);\r\n  };\r\n\r\n  const onCancel = (e) => {\r\n    e.preventDefault();\r\n    console.log('onCancel.item=');\r\n    reset({\r\n      edTitle: '',\r\n    });\r\n    todoId.current = undefined;\r\n  };\r\n\r\n  const onDelete = (e, item) => {\r\n    e.preventDefault();\r\n    const message = `삭제하시겠습니까?`;\r\n    if (window.confirm(message)) {\r\n      set(ref(firebaseDB, `todo/${userId}/${item.id}`), null);\r\n    }\r\n  };\r\n\r\n  // 완료 처리\r\n  const onCheck = (e, item) => {\r\n    e.preventDefault();\r\n    const message = `완료하시겠습니까?`;\r\n    if (window.confirm(message)) {\r\n      set(ref(firebaseDB, `todo/${userId}/${item.id}/ing`), '2');\r\n    }\r\n  };\r\n\r\n  const onInvalid = (errors) => console.error(errors);\r\n\r\n  function onSubmit(data, e) {\r\n    console.log('onSubmit.data=', data);\r\n    console.log('onSubmit.e=', e);\r\n    console.log('onSubmit.todoId=', todoId.current);\r\n    console.log('onSubmit.errors=', errors);\r\n\r\n    // This field will update as the user types\r\n    // const currentName = watch('edTitle');\r\n\r\n    const locate = `todo/${userId}/`;\r\n\r\n    // 신규 등록\r\n    if (todoId.current === undefined) {\r\n      const newKey = push(child(ref(firebaseDB), locate)).key;\r\n      console.log('onSubmit.newKey', newKey);\r\n      todoId.current = newKey;\r\n    }\r\n\r\n    // 제목\r\n    set(ref(firebaseDB, locate + todoId.current + '/title'), data.edTitle);\r\n    // 날짜\r\n    set(ref(firebaseDB, locate + todoId.current + '/date'), data.edDate);\r\n    // 1: 진행중, 2: 완료\r\n    set(ref(firebaseDB, locate + todoId.current + '/ing'), '1');\r\n\r\n    todoId.current = undefined;\r\n\r\n    // 초기화\r\n    reset({\r\n      edTitle: '',\r\n      edDate: daytime,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%', flexGrow: 1, m: 2 }}>\r\n      <div id=\"back-to-top-anchor\"></div>\r\n        <form onSubmit={handleSubmit(onSubmit, onInvalid)}>\r\n          {/* <Controller\r\n            name={'starRate'}\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Rating value={parseInt(value)} onChange={onChange} />\r\n            )}\r\n          /> */}\r\n\r\n          <Grid container spacing={2} columns={{ xs: 12, md: 12 }}>\r\n            {/* <Grid item xs={12}>\r\n              <Item>Todo List</Item>\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"date\"\r\n                style={{ paddingTop: '2px' }}\r\n                fullWidth\r\n                placeholder=\"일자\"\r\n                {...register('edDate')}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={9} sm={10}>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'normal', // 'center', 'flex-end'\r\n                  justifyContent: 'center', // 위에서 가운데 정렬.\r\n                }}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  style={{ paddingTop: '2px' }}\r\n                  // id=\"edTitle\"\r\n                  // inputRef={edTitle}\r\n                  placeholder=\"Todo Input\"\r\n                  {...register('edTitle')}\r\n                  // label=\"Todo Input\"\r\n                  variant=\"standard\"\r\n                  error={!!errors.edTitle}\r\n                  // helperText=\"Some important text\"\r\n                  // defaultValue=\"\"\r\n                />\r\n                <IconButton\r\n                  style={{ marginTop: '-4px' }}\r\n                  aria-label=\"bookmark\"\r\n                  onClick={(e) => onCancel(e)}\r\n                >\r\n                  <Cancel\r\n                    sx={{\r\n                      color: 'action.active',\r\n                      // marginTop: '16px',\r\n                      // mr: 1,\r\n                      // my: 0.5,\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={3} sm={2}>\r\n              <AniButton\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onClick={(e) => onInputBtn(e)}\r\n                color=\"success\"\r\n                size=\"small\"\r\n                disabled={isSubmitting}\r\n              >\r\n                입력\r\n              </AniButton>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {errors?.edTitle ? (\r\n                <p className=\"error\">{errors.edTitle?.message}</p>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n        {todoList?.map((item, idx) => {\r\n          return (\r\n            <div key={idx}>\r\n              <Box\r\n                sx={{\r\n                  display: 'plex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center', // align-items는 div 한줄일때 수직정렬을 의미.\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                <Typography\r\n                  component={'div'}\r\n                  variant=\"body2\"\r\n                  color=\"text.prime\"\r\n                  // sx={{ textAlign: 'center' }}\r\n                >\r\n                  {item.date}\r\n                </Typography>\r\n\r\n                <Box\r\n                  sx={{\r\n                    display: 'plex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center', // align-items는 div 한줄일때 수직정렬을 의미.\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  {item.ing === '1' && (\r\n                    <>\r\n                      <IconButton\r\n                        aria-label=\"완료\"\r\n                        onClick={(e) => onCheck(e, item)}\r\n                      >\r\n                        <Check />\r\n                      </IconButton>\r\n\r\n                      <IconButton\r\n                        aria-label=\"edit\"\r\n                        onClick={(e) => onEdit(e, item)}\r\n                      >\r\n                        <Edit />\r\n                      </IconButton>\r\n                    </>\r\n                  )}\r\n\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={(e) => onDelete(e, item)}\r\n                  >\r\n                    <Delete sx={{ color: 'rgba(120, 0, 0, 3)' }} />\r\n                  </IconButton>\r\n                </Box>\r\n              </Box>\r\n              <Typography\r\n                component={'div'}\r\n                variant=\"body\"\r\n                color=\"text.prime\"\r\n                // sx={{ textAlign: 'center' }}\r\n              >\r\n                {item.title}\r\n              </Typography>\r\n              <Divider />\r\n            </div>\r\n          );\r\n        })}\r\n      <ScrollToTop {...props} id={'#back-to-top-anchor'}>\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollToTop>\r\n\r\n      </Box>\r\n\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n","import { Container } from '@mui/material';\r\nimport React, { Suspense } from 'react';\r\nimport { Loading } from '../../components/Loading';\r\nimport Footer from '../../components/footer/Footer';\r\nimport BlogHeader from '../../components/header/BlogHeader';\r\nimport { useFireUser } from '../../firebase/useFireUser';\r\nimport { DrawerHeader } from '../../layout/MainLayout';\r\nimport { TodoDetail } from './TodoDetail';\r\n\r\n// const drawerWidth = 200;\r\n\r\n// 메인홈 상세 페이지\r\nconst Todo = () => {\r\n  const { user, handleGoogleLogin } = useFireUser();\r\n\r\n  // const homeData = useHomeTreeData('home');\r\n  // console.log('Todo.homeData=', homeData);\r\n  // console.log('Todo.homeData.state=', homeData.status);\r\n\r\n  // // 트리뷰 선택\r\n  // const onDetail = (id, fIdx) => {\r\n  //   // console.log('homeId=', id, fIdx);\r\n  //   navigate(`/home/${id}`, { state: { fullIndex: fIdx } });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <DrawerHeader />\r\n      <Container maxWidth=\"lg\" sx={{ mt: 3 }}>\r\n        <BlogHeader title=\"Todo\" />\r\n        <Suspense fallback={<Loading />}>\r\n          <TodoDetail\r\n            userId={user?.uid}\r\n            handleGoogleLogin={handleGoogleLogin}\r\n          />\r\n        </Suspense>\r\n      </Container>\r\n      <Footer />\r\n      <br />\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"names":["createSvgIcon","_jsx","d","Item","styled","Paper","_ref","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","TodoDetail","props","_errors$edTitle","userId","todoList","setTodoParam","locate","param","setParam","useState","result","setResult","word","setWord","useEffect","getData","memoRef","query","ref","firebaseDB","orderByChild","onValue","snapshot","exists","data","val","temp","i","item","id","sort","concat","ing","date","title","undefined","memo","toLowerCase","indexOf","push","a","b","filter","end","useTodoList","daytime","DateTime","now","setZone","toFormat","defaultValues","edTitle","edDate","register","handleSubmit","reset","getValues","setFocus","formState","errors","isSubmitting","submitCount","useForm","todoId","useRef","required","minLength","value","message","handleGoogleLogin","_jsxs","style","display","flexDirection","alignItems","width","marginTop","marginBottom","children","AniButton","type","size","variant","sx","mt","onClick","onSubmit","e","console","log","current","newKey","child","key","set","_Fragment","Box","flexGrow","m","error","Grid","container","columns","xs","md","TextField","paddingTop","fullWidth","placeholder","sm","justifyContent","IconButton","preventDefault","onCancel","Cancel","async","onInputBtn","disabled","className","map","idx","Typography","component","onCheck","window","confirm","Check","onEdit","Edit","onDelete","Delete","Divider","ScrollToTop","Fab","KeyboardArrowUpIcon","Todo","user","useFireUser","DrawerHeader","Container","maxWidth","BlogHeader","Suspense","fallback","Loading","uid","Footer"],"sourceRoot":""}