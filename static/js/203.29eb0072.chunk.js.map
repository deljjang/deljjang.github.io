{"version":3,"file":"static/js/203.29eb0072.chunk.js","mappings":"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","sources":["components/MemoMoveModal.js","components/MemoTreeView.js","components/input/ReactHookFormSelect.js","components/edit/DragDropFile.js","components/edit/EditorButton.js","components/edit/HtmlEditor.js","firebase/useTreeData.js","util/getExtensionOfFilename.js"],"sourcesContent":["import { Divider } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport * as React from 'react';\r\nimport AniButton from './button/AniButton';\r\nimport SinyTree from './tree/SinyTree';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 250,\r\n  maxHeight: '400px',\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #000',\r\n  boxShadow: 24,\r\n  boxSizing: 'border-box',\r\n  p: 4,\r\n};\r\n\r\nconst EditBtnDisplay = (props) => {\r\n  return (\r\n    <Box sx={{ my: 2, mt:3, display: 'flex' }}>\r\n      <AniButton type=\"submit\" variant=\"outlined\" color=\"success\"\r\n        onClick={props.onPost}>\r\n          확인\r\n      </AniButton>\r\n      <AniButton\r\n          type=\"button\"\r\n          variant=\"outlined\"\r\n          // color=\"success\"\r\n          onClick={props.onClose}\r\n        >\r\n          취소\r\n      </AniButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const MemoMoveModal = (props) => {\r\n  const [open, setOpen] = React.useState(props.open);\r\n  const [memoId, setMemoId] = React.useState();\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setMemoId(undefined);\r\n    props.onClose();\r\n  };\r\n\r\n  // console.log('MemoMoveModal.open=', props.open);\r\n  // console.log('MemoMoveModal.data=', props.data);\r\n\r\n  React.useEffect(() => {\r\n    setOpen(props.open);\r\n  }, [props.open]);\r\n  //moveOpen\r\n\r\n  const onDetail = (id, fIdx) => {\r\n    // console.log('onDetail.id=', id);\r\n    setMemoId(id);\r\n  };\r\n\r\n  const onPost = ()=> {\r\n    if(memoId === undefined) {\r\n        alert('이동할 메모장을 선택해 주세요');\r\n        return;\r\n    }\r\n    //setOpen(false);\r\n    props.onPost(memoId);    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            이동할 메모장 선택\r\n          </Typography>\r\n          <Divider></Divider>\r\n          <Box\r\n            sx={{\r\n              //overflowY: 'scroll',\r\n              width: '100%',\r\n              minHeight: 110,\r\n              maxHeight: 200,\r\n              flexGrow: 1,\r\n              minWidth: 100,\r\n              overflow: 'hidden',\r\n            }}\r\n          >\r\n            <SinyTree data={props.data} onDetail={onDetail} maxHeight={200} />\r\n          </Box>\r\n\r\n          <EditBtnDisplay onPost={onPost} onClose={handleClose}/>\r\n\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Grid, Input, OutlinedInput } from '@mui/material';\r\nimport { useRef } from 'react';\r\nimport AniButton from './button/AniButton';\r\n\r\n//트리뷰 상단 : 입력창, 버튼2개\r\nexport const MemoTreeView = (props) => {\r\n  const edSearch = useRef(null);\r\n\r\n  /**\r\n   * 조회 버튼 클릭\r\n   */\r\n  function onSearchDataBtn() {\r\n    // memoDataLoad();\r\n    // console.log('onSearchDataBtn', edSearch);\r\n    props.onSearchDataBtn(edSearch.current.value);\r\n  }\r\n\r\n  //새 메모 추가\r\n  function onNewMemoBtn() {\r\n    // memoDataLoad();\r\n    props.onNewMemoBtn();\r\n    return false;\r\n  }\r\n\r\n  //엔터 클릭시\r\n  function edSearchKeyPress(e) {\r\n    if (e.which === 13) {\r\n      onSearchDataBtn();\r\n    }\r\n  }\r\n\r\n  return (\r\n    /*     <Box\r\n      sx={{\r\n        // display: 'block',\r\n        // width: '100%',\r\n        // alignItems: 'center',\r\n        // justifyContent: 'center',\r\n        bgcolor: 'background.default',\r\n        color: 'text.primary',\r\n        borderRadius: 1,\r\n        p: 3,\r\n      }}\r\n    > */\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Input //OutlinedInput\r\n            id=\"edSearch\"\r\n            type=\"edSearch\"\r\n            // value={values.usrId}\r\n            name=\"edSearch\"\r\n            // ref={edSearch}\r\n            inputRef={edSearch}\r\n            // onBlur={handleBlur}\r\n            // onChange={handleChange}\r\n            placeholder=\"Enter Search...\"\r\n            fullWidth\r\n            sx={{ pt: 0, pl: 2, pr: 2, pb: 1 }}\r\n            onKeyDownCapture={edSearchKeyPress}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AniButton\r\n            disableElevation\r\n            fullWidth\r\n            // size=\"large\"\r\n            type=\"button\"\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            onClick={onNewMemoBtn}\r\n          >\r\n            새글\r\n          </AniButton>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <AniButton variant=\"outlined\" fullWidth onClick={onSearchDataBtn}>\r\n            조회\r\n          </AniButton>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Controller } from 'react-hook-form';\r\n\r\n// react-hook-form MUI 컨트롤\r\nconst ReactHookFormSelect = ({\r\n  name,\r\n  label,\r\n  control,\r\n  defaultValue,\r\n  selectList,\r\n  ...props\r\n}) => {\r\n  const labelId = `${name}-label`;\r\n  return (\r\n    <FormControl {...props}>\r\n      <InputLabel id={labelId}>{label}</InputLabel>\r\n      <Controller\r\n        render={({ field }) => (\r\n          <Select labelId={labelId} label={label} {...field}>\r\n            {selectList.map((item, idx) => {\r\n              return (\r\n                <MenuItem key={idx} value={item.value}>\r\n                  {item.text}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        )}\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ReactHookFormSelect;\r\n","import CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  Divider,\r\n  IconButton,\r\n  Paper,\r\n  Typography,\r\n} from '@mui/material';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport AniButton from '../button/AniButton';\r\nimport { useWatch } from 'react-hook-form';\r\n\r\n// 파일 업로드 화면\r\n// props { onFileUpload, imageList }\r\nconst DragDropFile = ({control}, ...props) => {\r\n  const content = useWatch({\r\n    control,\r\n    name: \"content\",\r\n  });\r\n\r\n  // const { values, setFieldValue } = useFormikContext();\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [files, setFiles] = useState([]);\r\n  const [imgList, setImgList] = useState(props.imageList);\r\n\r\n  const fileId = useRef(0);\r\n\r\n  useEffect(() => {\r\n    // console.log('DragDropFile.useEffect');\r\n    setFiles([]);\r\n  }, []);\r\n  // console.log('DragDropFile.imgList', imgList);\r\n\r\n  const handleDragOver = useCallback((e) => {\r\n    e.preventDefault();\r\n    if (e.dataTransfer?.files) {\r\n      setDragOver(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((event) => {\r\n    event.preventDefault();\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  // 파일 목록 추가된 경우\r\n  const onChangeFiles = useCallback(\r\n    (e) => {\r\n      // console.log('onChangeFiles');\r\n\r\n      let selectFiles = [];\r\n      let tempFiles = files;\r\n\r\n      if (e.type === 'drop') {\r\n        selectFiles = e.dataTransfer.files;\r\n      } else {\r\n        selectFiles = e.target.files;\r\n      }\r\n\r\n      for (const file of selectFiles) {\r\n        const objectUrl = URL.createObjectURL(file);\r\n        // console.log('onChangeFiles.objectUrl', objectUrl);\r\n\r\n        tempFiles = [\r\n          ...tempFiles,\r\n          {\r\n            id: fileId.current++,\r\n            object: file,\r\n            url: objectUrl,\r\n          },\r\n        ];\r\n      }\r\n\r\n      //const objectUrl = URL.createObjectURL(selectedFile)\r\n      //setPreview(objectUrl)\r\n\r\n      // free memory when ever this component is unmounted\r\n      //return () => URL.revokeObjectURL(objectUrl)\r\n\r\n      props.onFileUpload(tempFiles);\r\n      setFiles(tempFiles);\r\n    },\r\n    [files]\r\n  );\r\n\r\n  // 서버 파일 삭제시 사용\r\n  const handleServerFile = useCallback((tempFiles) => {\r\n    // console.log('handleServerFile=' + tempFiles);\r\n    setImgList(tempFiles);\r\n    props.onDelete(tempFiles);\r\n  }, []);\r\n\r\n  // 추가 버튼 클릭시 편집창에 추가한다.\r\n  const onInsert = (file) => {\r\n    // console.log('onInsert.file', file);\r\n    let value = content; // values.content\r\n    if (file.ext === 'jpg') {\r\n      value += `<img src='${file.url}'/>`;\r\n    } else if (file.ext === 'mp4') {\r\n      // <video preload=\"auto\" controls=\"\" src=\"https://firebasestorage.googleapis.com/v0/b/sinyproject.appspot.com/o/home%2F-NnMvY-OvaTgxwahlu_o%2F-NnMwxhfbIPPnuBwKRaW.mp4?alt=media&amp;token=1be96ec0-f4d7-4b21-b2fd-6a9a48119e5a\" style=\"width: 100%; height: 100%;\"></video>\r\n      value += `<video preload=\"auto\" controls=\"\" src='${file.url}'></video>`;\r\n      // console.log('mp4.value=', value);\r\n    }\r\n\r\n    //setFieldValue('content', value);\r\n    props.setContent(value);\r\n    //values({ ...values, content: value });\r\n    // setFieldValue('GstNo', value\r\n    // props.onInsert(file);\r\n  };\r\n\r\n  // 파일 삭제시 사용\r\n  const handleFilterFile = useCallback(\r\n    (id) => {\r\n      // console.log('handleFilterFile');\r\n      const tempFiles = files.filter((file) => file.id !== id);\r\n      props.onFileUpload(tempFiles);\r\n      setFiles(tempFiles);\r\n    },\r\n    [files]\r\n  );\r\n\r\n  //onDrop 이벤트(추가 시작점)\r\n  const handleDrop = useCallback(\r\n    (e) => {\r\n      // console.log('handleDrop');\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      setDragOver(false);\r\n      onChangeFiles(e);\r\n    },\r\n    [onChangeFiles]\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Paper\r\n        variant=\"outlined\"\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n        cursor=\"pointer\"\r\n        sx={{\r\n          '&:hover': {\r\n            cursor: 'pointer',\r\n          },\r\n        }}\r\n        style={{\r\n          border: dragOver ? '1px dashed red' : '1px dashed gray',\r\n          paddingLeft: 5,\r\n          paddingRight: 5,\r\n          marginBottom: 10,\r\n          textAlign: 'center',\r\n          cursor: 'pointer',\r\n          backgroundColor: dragOver ? 'secondary' : 'transparent',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <input\r\n          type=\"file\"\r\n          id=\"fileUpload\"\r\n          style={{ display: 'none' }}\r\n          multiple={true}\r\n          onChange={onChangeFiles}\r\n        />\r\n        <label htmlFor=\"fileUpload\">\r\n          <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <CloudUploadIcon style={{ fontSize: 40 }} />\r\n            </IconButton>\r\n            <Typography>파일 업로드</Typography>\r\n          </Box>\r\n        </label>\r\n        {isLoading && (\r\n          <CircularProgress\r\n            size={24}\r\n            style={{\r\n              position: 'absolute',\r\n              top: '50%',\r\n              left: '50%',\r\n              marginTop: '-12px',\r\n              marginLeft: '-12px',\r\n            }}\r\n          />\r\n        )}\r\n      </Paper>\r\n\r\n      <div>\r\n        <ServerImageList\r\n          imgList={imgList}\r\n          onInsert={onInsert}\r\n          onClick={handleServerFile}\r\n        />\r\n        {files.length > 0 &&\r\n          files.map((file, index) => {\r\n            // { id: fileId.current++, object: file, url:objectUrl}\r\n            const {\r\n              id,\r\n              object: { name },\r\n              url,\r\n            } = file;\r\n\r\n            return (\r\n              <div key={index}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"row\"\r\n                  alignItems=\"center\"\r\n                  sx={{ justifyContent: 'space-between' }}\r\n                  key={index}\r\n                >\r\n                  <img src={url} style={{ width: '50px' }}></img>\r\n                  <div>{name}</div>\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => handleFilterFile(id)}\r\n                  >\r\n                    <DeleteIcon sx={{ color: 'red' }} />\r\n                  </IconButton>\r\n                </Box>\r\n                <Divider />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\n/* \r\nprops : imgList, onClick\r\n*/\r\nconst ServerImageList = (props) => {\r\n  const [imgList, setImgList] = useState(props.imgList);\r\n\r\n  const onInsert = (key) => {\r\n    imgList.map((file) => {\r\n      if (file.key === key) {\r\n        props.onInsert(file);\r\n        return false;\r\n      }\r\n    });\r\n    return false;\r\n  };\r\n\r\n  //삭제버튼 클릭\r\n  const onClick = (key) => {\r\n    const tempFiles = imgList.map((file) => {\r\n      if (file.key === key) {\r\n        file.del = 'Y';\r\n      }\r\n      return file;\r\n    });\r\n    setImgList(tempFiles);\r\n\r\n    props.onClick(tempFiles);\r\n  };\r\n\r\n  /* \r\n  <video\r\n  preload=\"auto\"\r\n  controls=\"\"\r\n  src=\"https://firebasestorage.googleapis.com/v0/b/sinyproject.appspot.com/o/home%2F-NnMvY-OvaTgxwahlu_o%2F-NnMwxhfbIPPnuBwKRaW.mp4?alt=media&amp;token=1be96ec0-f4d7-4b21-b2fd-6a9a48119e5a\"\r\n  style=\"width: 100%; height: 100%\"\r\n></video>\r\n */\r\n\r\n  // console.log('ServerImageList.imgList', imgList);\r\n  return (\r\n    imgList &&\r\n    imgList.length > 0 &&\r\n    imgList.map((file, index) => {\r\n      // console.log('ServerImageList.map', file);\r\n      /*             \r\n      {ext: 'jpg', name: '소현_증명사진.jpg', use: 'Y', url:https://~~~}\r\n      */\r\n      const { key, name, url, del, ext } = file;\r\n\r\n      if (del !== undefined) return '';\r\n\r\n      return (\r\n        <div key={index}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            sx={{ justifyContent: 'space-between' }}\r\n          >\r\n            {ext === 'mp4' && (\r\n              <Typography\r\n                style={{ width: '50px', textAlign: 'center' }}\r\n                variant=\"body\"\r\n              >\r\n                {ext}\r\n              </Typography>\r\n            )}\r\n            {ext === 'jpg' && <img src={url} style={{ width: '50px' }}></img>}\r\n\r\n            <div>{name}</div>\r\n            <div style={{ display: 'flex' }}>\r\n              {url && (\r\n                <AniButton\r\n                  variant=\"outlined\"\r\n                  // startIcon={<DeleteIcon />}\r\n                  color=\"success\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onInsert(key);\r\n                  }}\r\n                >\r\n                  추가\r\n                </AniButton>\r\n              )}\r\n              <IconButton aria-label=\"delete\" onClick={() => onClick(key)}>\r\n                <DeleteIcon sx={{ color: 'red' }} />\r\n              </IconButton>\r\n            </div>\r\n          </Box>\r\n          <Divider />\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n};\r\n\r\nexport default DragDropFile;\r\n","import { Box } from \"@mui/material\";\r\nimport AniButton from \"../button/AniButton\";\r\n\r\n// 상단 저장, 취소 버튼\r\nexport const EditorButton = ({onSubmit, onCancel, isSubmitting}) => {\r\n  // Then inside the component body\r\n  return (\r\n    <Box sx={{ my: 2, display: 'flex' }}>\r\n      <AniButton\r\n        // type=\"submit\"\r\n        variant=\"outlined\"\r\n        color=\"success\"\r\n        disabled={isSubmitting}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          onSubmit(e);\r\n        }}\r\n      >\r\n        저장\r\n      </AniButton>\r\n      <AniButton\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        // color=\"success\"\r\n        onClick={onCancel}\r\n      >\r\n        취소\r\n      </AniButton>\r\n    </Box>\r\n  );\r\n}","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'quill/dist/quill.bubble.css';\r\n// import QuillWrapper from 'react-quill';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport ReactHookFormSelect from '../input/ReactHookFormSelect';\r\n\r\n// third party\r\nimport useWindowDimensions from '../../util/useWindowDimensions';\r\nimport AniButton from '../button/AniButton';\r\nimport DragDropFile from './DragDropFile';\r\n\r\n// npm i highlight.js\r\nimport hljs from 'highlight.js';\r\n// import hljs from 'highlight.js/lib/core';\r\n// import javascript from 'highlight.js/lib/languages/javascript';\r\n\r\n// import 'highlight.js/styles/github.css';\r\n// import 'highlight.js/monokai-sublime.min.css';\r\n\r\nimport './HtmlEditor.css';\r\n\r\n// npm i quill-image-drop-module\r\nimport { ImageDrop } from 'quill-image-drop-module';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DateTime } from 'luxon';\r\nimport { EditorButton } from './EditorButton';\r\nimport ReactHookFormDate from '../input/ReactHookFormDate';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nQuill.register('modules/imageDrop', ImageDrop);\r\n\r\n// Then register the languages you need\r\n// hljs.registerLanguage('javascript', javascript);\r\n// hljs.registerLanguage('python', python);\r\n// hljs.registerLanguage('typescript', typescript);\r\n// hljs.registerLanguage('c', c);\r\n\r\nhljs.configure({\r\n  languages: ['javascript', 'ruby', 'python', 'java', 'cpp', 'kotlin', 'sql'],\r\n  // languages: ['javascript'],\r\n});\r\n\r\nconst editorModule = {\r\n  syntax: {\r\n    highlight: (text) => hljs.highlightAuto(text).value,\r\n  },\r\n  // syntax: true,\r\n  toolbar: [\r\n    [{ header: '1' }, { header: '2' }, { font: [] }],\r\n    [{ size: [] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [\r\n      { list: 'ordered' },\r\n      { list: 'bullet' },\r\n      { indent: '-1' },\r\n      { indent: '+1' },\r\n    ],\r\n    ['link', 'image', 'video'],\r\n    ['clean'],\r\n    ['code-block'], // 코드 사용시\r\n    // ['code-custom'], // 사용자 정의의 코드\r\n  ],\r\n  imageDrop: true,\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  },\r\n};\r\n\r\n/*\r\n * Quill editor formats\r\n * See https://quilljs.com/docs/formats/\r\n */\r\nconst formats = [\r\n  'header',\r\n  'font',\r\n  'size',\r\n  'bold',\r\n  'italic',\r\n  'underline',\r\n  'strike',\r\n  'blockquote',\r\n  'list',\r\n  'bullet',\r\n  'indent',\r\n  'link',\r\n  'image',\r\n  'video',\r\n  'clean',\r\n  'code-block',\r\n  'code-custom',\r\n];\r\n\r\n// // 'code-block', // 코드 사용시\r\n// 'code-custom', // 사용자 정의의 코드\r\n\r\n// 이미지를 fire Storage에 저장\r\n// https://yhuj79.github.io/React/230214/\r\n\r\nconst HtmlEditor = (props) => {\r\n  const content = useRef();\r\n  const [imageList, setImageList] = useState(props.imageList);\r\n\r\n  const isSubmit = useRef();\r\n\r\n  const newMode = props.newMode;\r\n  // console.log('HtmlEditor.props', props);\r\n\r\n  const files = useRef([]);\r\n\r\n  const { height, width } = useWindowDimensions();\r\n  //console.log('HtmlEditor.height=', height, 'width=', width);\r\n\r\n  // console.log('DateTime.toFormat=', DateTime.now().toFormat('yyyy-MM-dd'));\r\n  // const daytime = DateTime.now().setZone(\"Asia/Seoul\").toFormat('yyyy-MM-dd HH:mm:ss');\r\n  //DateTime.fromFormat(row.create_dt, 'yyyyMMddhhmmss').toFormat('yyyy/MM/dd hh:mm')\r\n  const daytime = DateTime.now().setZone('Asia/Seoul').toFormat('yyyy-MM-dd');\r\n  // console.log('daytime=', daytime);\r\n\r\n  const daytimeSave = DateTime.now().setZone('Asia/Seoul').toFormat('hh:mm');\r\n\r\n  const defaultValues = {\r\n    edTitle: props.title,\r\n    edGbn: props.gbn ? props.gbn : '',\r\n    edDate: props.date ? props.date : daytime,\r\n    content: props.content,\r\n  }\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    trigger,\r\n    reset,\r\n    control,\r\n    setValue,\r\n    getValues,\r\n    watch,\r\n    setFocus,\r\n    setState,\r\n    // Read the formState before render to subscribe the form state through the Proxy\r\n    formState: { errors, isDirty, isSubmitting, touchedFields, submitCount },\r\n  } = useForm({\r\n    mode: 'onChange',\r\n    defaultValues: defaultValues,\r\n  });\r\n\r\n  register('edDate', { required: true, minLength: 10 });\r\n  register('edGbn', { required: true});\r\n  register('edTitle', {\r\n    required: '해당 필드는 필수입니다.',\r\n    minLength: {\r\n      value: 3,\r\n      message: '3글자 이상 입력해주세요.',\r\n    },\r\n  });\r\n\r\n  // title: \"MUI Size\"\r\n  // gbn: \"react\"\r\n  // content: \"<p>MUI Size</p><p><br></p><ul><li>xs: Extra-small: 0px</li><li>sm: Small: 600px</li><li>md: Medium: 900px</li><li>lg: Large: 1200px</li><li>xl: Extra-large: 1536px</li></ul>\"\r\n\r\n  useEffect(() => {\r\n    files.current = [];\r\n    content.current = props.content;\r\n    isSubmit.current = false;\r\n  }, []);\r\n  // console.log('DragDropFile.imgList', imgList);\r\n\r\n  // 저장 처리(새글 포함)\r\n  const onSubmit = async (values) => {\r\n    console.log('onPostSubmit.newMode=', newMode);\r\n    console.log('onPostSubmit.values=', values);\r\n    // console.log('onPostSubmit.imageList', imageList);\r\n    if (newMode) {\r\n      props.onNewSubmit(values, imageList, files.current);\r\n    } else {\r\n      await props.onPostSubmit(values, imageList, files.current);\r\n    }\r\n  };\r\n\r\n  /*\r\n  const customUploadAdapter = (loader) => {};\r\n\r\n  const editorConfiguration = {\r\n    plugins: [Paragraph, Bold, Italic, Essentials],\r\n    toolbar: [\"bold\", \"italic\"],\r\n    extraPlugins: [uploadPlugin],\r\n    //place\r\n  };\r\n\r\n  function uploadPlugin(editor) {\r\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\r\n      return customUploadAdapter(loader);\r\n    };\r\n  } */\r\n\r\n  // 저장버튼 클릭\r\n  const onSaveBtn = () => {\r\n    console.log('onSaveBtn.content=', content.current);\r\n    console.log('onSaveBtn.edGbn=', getValues('edGbn'));\r\n    console.log('onSaveBtn.errors=', errors);\r\n    console.log('onSaveBtn.isSubmitting=', isSubmitting);\r\n\r\n    //isSubmit.current = true;\r\n    handleSubmit(onSubmit)();\r\n    // submitForm();\r\n  };\r\n\r\n  // 서버파일 삭제\r\n  const onDelete = (tempFiles) => {\r\n    // console.log('onDelete.imageList', tempFiles);\r\n    setImageList(tempFiles);\r\n  };\r\n\r\n  const onInsert = (file) => {\r\n    // console.log('onInsert.file', file);\r\n    let value = content.current;\r\n    if (file.ext === 'jpg') {\r\n      value += `<img src='${file.url}'/>`;\r\n    } else if (file.ext === 'mp4') {\r\n      // <video preload=\"auto\" controls=\"\" src=\"https://firebasestorage.googleapis.com/v0/b/sinyproject.appspot.com/o/home%2F-NnMvY-OvaTgxwahlu_o%2F-NnMwxhfbIPPnuBwKRaW.mp4?alt=media&amp;token=1be96ec0-f4d7-4b21-b2fd-6a9a48119e5a\" style=\"width: 100%; height: 100%;\"></video>\r\n      value += `<video preload=\"auto\" controls=\"\" src='${file.url}'></video>`;\r\n      // console.log('mp4.value=', value);\r\n    }\r\n\r\n    content.current = value;\r\n    // setFieldValue('GstNo', valueFromApi)\r\n    // setValue/ ('GstNo', valueFromApi)\r\n  };\r\n\r\n  const setContent = (value) => {\r\n    content.current = value;\r\n  };\r\n\r\n  const handleFileUpload = (file) => {\r\n    // console.log('handleFileUpload', file);\r\n    files.current = file;\r\n  };\r\n\r\n  function handleChange(value) {\r\n    console.log('handleChange=', value);\r\n    content.current = value;\r\n\r\n    //register로 등록하지 않고, 강제로 값을 넣어주는 기능 !!\r\n    setValue('content', value);\r\n    //onChange 됐는지 안됐는지 react-hook-form에 알려주는 기능 !!\r\n    trigger('content');\r\n  }\r\n\r\n  function handleChangeDate(value) {\r\n    console.log('handleChangeDate=', value);\r\n\r\n    let date = dayjs(value);\r\n\r\n    // date.format(); // 2022-12-01T10:30:25+09:00\r\n    // date.format(\"YY-MM-DD\"); // 22-12-01\r\n    // date.format(\"DD/MM/YY\"); // 01/12/22\r\n    // date.format(\"YYYY-MM-DD HH:mm:ss\"); // 2022.12.01 10:30:25\r\n    date.format(\"YYYY-MM-DD HH:mm:ss\"); // 2022.12.01 10:30:25\r\n\r\n    console.log('handleChangeDate.dayjs=', date.format(\"YYYY-MM-DD HH:mm:ss\"));\r\n    \r\n    //register로 등록하지 않고, 강제로 값을 넣어주는 기능 !!\r\n    setValue('edDate', date.format(\"YYYY-MM-DD\"));\r\n    //onChange 됐는지 안됐는지 react-hook-form에 알려주는 기능 !!\r\n    trigger('edDate');\r\n  }\r\n\r\n  const editorContent = watch('content');\r\n\r\n  const selectList = [\r\n    { value: '', text: 'None' },\r\n    { value: 'react', text: 'React' },\r\n    { value: 'android', text: 'Android' },\r\n    { value: 'java', text: 'JAVA' },\r\n    { value: 'image', text: '그림 / 사진' },\r\n    { value: 'etc', text: '기타' },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        my: 2,\r\n        mb: '50px',\r\n        width: '100%',\r\n        // maxHeight: '50vh',\r\n        // minHeight: '30vh',\r\n      }}\r\n    >\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        style={{\r\n          width: '100%',\r\n          minHeight: '300px',\r\n          maxWidth: `${width}px - 20px`,\r\n          maxHeight: { height },\r\n        }}\r\n      >\r\n        <EditorButton\r\n          onSubmit={(e) => onSaveBtn(e)}\r\n          onCancel={props.onCancel}\r\n          isSubmitting={isSubmitting}\r\n        />\r\n        <DragDropFile\r\n          control={control}\r\n          onDelete={onDelete}\r\n          onInsert={onInsert}\r\n          setContent={setContent}\r\n          onFileUpload={handleFileUpload}\r\n          imageList={props.imageList}\r\n        />\r\n        <TextField\r\n          {...register('edTitle')}\r\n          fullWidth\r\n          label=\"제목\"\r\n          placeholder=\"제목\"\r\n          variant=\"standard\"\r\n          style={{ paddingLeft: '0px' }}\r\n          error={!!errors.edTitle}\r\n        />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            alignContent: 'center',\r\n          }}\r\n        >\r\n          <ReactHookFormSelect\r\n            id=\"edGbn\"\r\n            name=\"edGbn\"\r\n            label=\"category\"\r\n            control={control}\r\n            defaultValue={getValues('edGbn')}\r\n            variant=\"standard\" // \"outlined\"\r\n            margin=\"normal\"\r\n            selectList={selectList}\r\n            error={!!errors.edGbn}\r\n          />\r\n          <DatePicker // DatePicker //ReactHookFormDate\r\n            style={{ paddingTop: '2px' }}\r\n            format=\"YYYY-MM-DD\"\r\n            fullWidth\r\n            // control={control}\r\n            label='일자'\r\n            id='edDate'\r\n            // name='edDate'\r\n            value={dayjs(getValues('edDate'))}\r\n            {...register('edDate')}\r\n            variant=\"outlined\"\r\n            defaultValue={dayjs(getValues('edDate'))}\r\n            onChange={handleChangeDate}\r\n            // views={['year', 'month', 'day']}\r\n            \r\n          />\r\n{/* \r\n          <TextField\r\n            type=\"date\"\r\n            style={{ paddingTop: '2px' }}\r\n            fullWidth\r\n            placeholder=\"일자\"\r\n            {...register('edDate')}\r\n            variant=\"standard\"\r\n          /> */}\r\n        </div>\r\n        {/* \r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n          <InputLabel id=\"demo-simple-select-standard-label\">분류</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-standard-label\"\r\n            {...register('edGbn')}\r\n            fullWidth\r\n            // onBlur={handleBlur}\r\n            label=\"분류\"\r\n            style={{ paddingLeft: '0px' }}\r\n          >\r\n            <MenuItem value={undefined}>\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"react\">React</MenuItem>\r\n            <MenuItem value=\"android\">Android</MenuItem>\r\n            <MenuItem value=\"java\">JAVA</MenuItem>\r\n            <MenuItem value=\"image\">그림 / 사진</MenuItem>\r\n          </Select>\r\n        </FormControl> */}\r\n        <ReactQuill\r\n          fullWidth\r\n          theme=\"snow\" // \"bubble\" // \"snow\"\r\n          id={'content'}\r\n          name={'content'}\r\n          // {...register('content')}\r\n          type=\"div\"\r\n          value={editorContent}\r\n          style={{\r\n            minWidth: `400px`,\r\n            border: '1px solid primary.main',\r\n            minHeight: '200px',\r\n            height: '400px',\r\n            maxHeight: '450px',\r\n            // overflow: 'auto',\r\n          }}\r\n          sx={{\r\n            width: `${width}px - 50px`,\r\n          }}\r\n          // style={{ width: \"800px\", height: \"0 auto\" }}\r\n          // placeholder=\"내용을 입력해 주세요\"\r\n          modules={editorModule}\r\n          formats={formats}\r\n          onChange={handleChange}\r\n          // onChange?(value: string, delta: DeltaStatic, source: Sources, editor: UnprivilegedEditor): void;\r\n          // onChange={(value) => {\r\n          //   // setFormState({...formState, content: value})\r\n          //   if (!isSubmit.current) {\r\n          //     content.current = value;\r\n          //     // console.log('editor.content=', content);\r\n          //     // console.log('onChange.value=', value);\r\n          //   }\r\n          // }}\r\n          // onChange={(content, delta, source, editor) => {\r\n          //   console.log('editor.content=', content);\r\n          //   console.log('editor.getHTML=', editor.getHTML());\r\n          //   console.log('editor.source=', source);\r\n          //   console.log('editor.delta=', delta);\r\n\r\n          //   field.onChange(field.name)\r\n          //   setContent(editor.getHTML())\r\n          // }}\r\n        />\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HtmlEditor;\r\n","import { onValue, orderByChild, query, ref } from 'firebase/database';\r\nimport { useEffect, useState } from 'react';\r\nimport { firebaseDB } from './firebase';\r\n\r\n// 메모, 성경 트리 데이터 읽기\r\n// use :\r\n// const [memoData, setMemoData, setWord] = useTreeData('');\r\n// useTreeData(`memo/${uid}`)\r\n// useTreeData(`home/`)\r\nexport const useTreeData = (locate) => {\r\n  const [param, setParam] = useState(locate);\r\n  const [result, setResult] = useState([]);\r\n  const [ word, setWord ] = useState();\r\n\r\n  useEffect(() => {\r\n    // console.log('param=', param);\r\n    if (param !== '') {\r\n      getData(param);\r\n    }\r\n  }, [param, word]);\r\n\r\n  const getData = (param) => {\r\n    const memoRef = query(\r\n      ref(firebaseDB, param), // `memo_txt/${uid}`),\r\n      orderByChild('title')\r\n      // equalTo('Y')\r\n      // orderByKey('bookmark')\r\n    );\r\n\r\n    onValue(memoRef, (snapshot) => {\r\n      // console.log('snapshot', snapshot);\r\n      if (!snapshot.exists()) return;\r\n\r\n      const data = snapshot.val();\r\n      // console.log('data=', data);\r\n      // console.log('word=', word);\r\n\r\n      const temp = [];\r\n      for (let i in data) {\r\n        const item = data[i];\r\n\r\n        // console.log('i=' + i, 'up', item.up);\r\n        // i=-MWafM1H_6HvLKIb4jL0 up -MWafM1H_6HvLKIb4jL0\r\n\r\n        item.id = item.up;\r\n        item.fullIndex = item.up;\r\n\r\n        // 검색어가 없는 경우\r\n        if(word === '' || word === undefined) {\r\n          if (item.sub !== null) {\r\n            item.children = dbChildren(item, item.up);\r\n          }\r\n          temp.push(item);          \r\n        } else {\r\n          // 검색어가 있는 경우\r\n          item.id = i;\r\n          let tmp = item.memo + '';\r\n          if (tmp.toLowerCase().indexOf(word.toLowerCase()) > -1) {\r\n            temp.push(item);\r\n          }\r\n        }\r\n      }\r\n      //문자 정렬 처리\r\n      temp.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n\r\n      // console.log('useTreeData.temp=', temp);\r\n      setResult(temp);\r\n    });\r\n  };\r\n\r\n  return [result, setParam, setWord];\r\n};\r\n\r\nfunction dbChildren(data, fullIndex) {\r\n  const sub = [];\r\n\r\n  if (data === undefined || data.sub === undefined) {\r\n    return sub;\r\n  }\r\n\r\n  for (let key in data.sub) {\r\n    let memo = data.sub[key];\r\n    memo.id = key;\r\n    memo.key = key;\r\n    // if (memo.title === 'FCM') {\r\n    //   console.log('FCM.memo=', key, memo);\r\n    // }\r\n  }\r\n\r\n  Object.values(data.sub)\r\n    .sort((a, b) => b.title - a.title)\r\n    .map((memo) => {\r\n      //console.log('dbChildren.memo=', memo);\r\n      // memo.name = memo.title;\r\n      // memo.id = memo.up ? memo.up : memo.key;\r\n      memo.id = memo.key;\r\n      // memo.id = memo.key;\r\n      memo.fullIndex = fullIndex + '/sub/' + memo.key;\r\n      if (memo.sub !== null) {\r\n        memo.children = dbChildren(memo, memo.fullIndex);\r\n      }\r\n\r\n      sub.push(memo);\r\n\r\n    });\r\n\r\n  return sub;\r\n}\r\n","/**\r\n * 파일명에서 확장자명 추출\r\n * @param filename   파일명\r\n * @returns _fileExt 확장자명\r\n */\r\nexport default function getExtensionOfFilename(filename) {\r\n \r\n    var _fileLen = filename.length;\r\n  \r\n    /** \r\n     * lastIndexOf('.') \r\n     * 뒤에서부터 '.'의 위치를 찾기위한 함수\r\n     * 검색 문자의 위치를 반환한다.\r\n     * 파일 이름에 '.'이 포함되는 경우가 있기 때문에 lastIndexOf() 사용\r\n     */\r\n    var _lastDot = filename.lastIndexOf('.');\r\n  \r\n    // 확장자 명만 추출한 후 소문자로 변경\r\n    var _fileExt = filename.substring(_lastDot+1, _fileLen).toLowerCase();\r\n  \r\n    return _fileExt;\r\n  }\r\n  "],"names":["style","position","top","left","display","flexDirection","alignItems","transform","width","maxHeight","bgcolor","border","boxShadow","boxSizing","p","EditBtnDisplay","props","_jsxs","Box","sx","my","mt","children","_jsx","AniButton","type","variant","color","onClick","onPost","onClose","MemoMoveModal","open","setOpen","React","memoId","setMemoId","handleClose","undefined","Modal","Typography","id","component","Divider","minHeight","flexGrow","minWidth","overflow","SinyTree","data","onDetail","fIdx","alert","MemoTreeView","edSearch","useRef","onSearchDataBtn","current","value","_Fragment","Grid","container","spacing","item","xs","Input","name","inputRef","placeholder","fullWidth","pt","pl","pr","pb","onKeyDownCapture","e","which","disableElevation","onNewMemoBtn","_ref","label","control","defaultValue","selectList","labelId","concat","FormControl","InputLabel","Controller","render","_ref2","field","Select","map","idx","MenuItem","text","ServerImageList","imgList","setImgList","useState","length","file","index","key","url","del","ext","justifyContent","textAlign","src","preventDefault","onInsert","IconButton","tempFiles","DeleteIcon","_len","arguments","Array","_key","content","useWatch","dragOver","setDragOver","isLoading","setIsLoading","files","setFiles","imageList","fileId","useEffect","handleDragOver","useCallback","_e$dataTransfer","dataTransfer","handleDragLeave","event","onChangeFiles","selectFiles","target","objectUrl","URL","createObjectURL","object","onFileUpload","handleServerFile","onDelete","handleFilterFile","filter","handleDrop","stopPropagation","Paper","onDragOver","onDragLeave","onDrop","cursor","paddingLeft","paddingRight","marginBottom","backgroundColor","multiple","onChange","htmlFor","CloudUploadIcon","fontSize","CircularProgress","size","marginTop","marginLeft","setContent","EditorButton","onSubmit","onCancel","isSubmitting","disabled","Quill","register","ImageDrop","hljs","configure","languages","editorModule","syntax","highlight","highlightAuto","toolbar","header","font","list","indent","imageDrop","clipboard","matchVisual","formats","setImageList","isSubmit","newMode","height","useWindowDimensions","daytime","DateTime","now","setZone","toFormat","defaultValues","edTitle","title","edGbn","gbn","edDate","date","handleSubmit","trigger","reset","setValue","getValues","watch","setFocus","setState","formState","errors","isDirty","touchedFields","submitCount","useForm","mode","required","minLength","message","async","console","log","values","onNewSubmit","onPostSubmit","editorContent","mb","maxWidth","DragDropFile","TextField","error","alignContent","ReactHookFormSelect","margin","DatePicker","paddingTop","format","dayjs","ReactQuill","theme","modules","useTreeData","locate","param","setParam","result","setResult","word","setWord","getData","memoRef","query","ref","firebaseDB","orderByChild","onValue","snapshot","exists","val","temp","i","up","fullIndex","sub","dbChildren","push","memo","toLowerCase","indexOf","sort","a","b","Object","getExtensionOfFilename","filename","_fileLen","_lastDot","lastIndexOf","substring"],"sourceRoot":""}