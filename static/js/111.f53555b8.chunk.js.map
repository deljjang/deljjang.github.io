{"version":3,"file":"static/js/111.f53555b8.chunk.js","mappings":"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","sources":["components/BibleBookmarkText.js","firebase/useBibleBookmark.js","views/bible/Song.js"],"sourcesContent":["import { Divider, Grid } from '@mui/material';\r\nimport { HtmlText } from './HtmlText';\r\nimport { LinkItem } from './LinkItem';\r\nimport { useBibleBookmark } from '../firebase/useBibleBookmark';\r\n\r\nconst BibleBookmarkText = () => {\r\n  // const data = new Array();\r\n  const { query } = useBibleBookmark();\r\n  const data = query.data;\r\n\r\n  // console.log('BibleText.dataText=', props.dataText);\r\n  // console.log('BibleBookmarkText.data=', data);\r\n\r\n  if (data === undefined || data === null) return;\r\n\r\n  return (\r\n    <>\r\n      {data.map((item, idx) => {\r\n        // console.log('BibleText.item=', item);\r\n        return (\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            columns={{ xs: 5, sm: 7, md: 10, lg: 12 }}\r\n            key={idx}\r\n            id={`id_${idx + 1}`}\r\n          >\r\n            <Grid item xs={1} md={1}>\r\n              <LinkItem\r\n                to={`/bible/${item.cd1}_${item.cd2}_${item.cd3}`}\r\n                state={{ cd4: item.cd4 }}\r\n              >\r\n                {item.nm}\r\n              </LinkItem>\r\n            </Grid>\r\n            <Grid item xs={4} sm={6} md={9} lg={11}>\r\n              <HtmlText show={true} text={item.txt} />\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      })}\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BibleBookmarkText;\r\n","import { get, onValue, ref, set } from 'firebase/database';\r\nimport { useEffect, useState } from 'react';\r\nimport { firebaseDB } from './firebase';\r\nimport { useFireUser } from './useFireUser';\r\nimport { QueryClient, useQuery, useSuspenseQuery } from '@tanstack/react-query';\r\n\r\n// 북마크 관련\r\n// use :\r\n// const bookmark = useBibleBookmark();\r\nexport const useBibleBookmark = () => {\r\n  const queryClient = new QueryClient();\r\n  const { user } = useFireUser();\r\n\r\n  // const queryClient = new QueryClient();\r\n  // const id = queryClient.getQueryData('userId');\r\n  // console.log('useBibleBookmark.id=', id);\r\n  // let userId; // 'I3cTgdCxwjhBBno4mtZYvnODPJu1';\r\n\r\n  const query = useQuery({\r\n    queryKey: ['useBibleBookmark'],\r\n    // queryFn: () => new Promise(() => {getBookmarkData()}),\r\n    queryFn: ()=> getBookmarkData(),\r\n    // The query will not execute until the userId exists\r\n    enabled: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(user !== undefined) {\r\n      // console.log('useEffect.user=', user);\r\n      query.refetch();\r\n    }\r\n  }, [user]);\r\n\r\n  async function getBookmarkData() {\r\n    // console.log('getBookmarkData.user', user.uid);\r\n    if (user.uid === undefined) {\r\n      return new Error('Error undefined');\r\n    }\r\n    const locate = ref(firebaseDB, `bible_mark/${user.uid}`);\r\n\r\n    const snapshot = await get(locate);\r\n    const result = new Array();\r\n    // console.log('useBookmark.snapshot', snapshot);\r\n\r\n    if (!snapshot.exists()) {\r\n      // console.log('getBookmarkData.exists', snapshot);\r\n      return new Error('Error exists');\r\n    } else {\r\n      const data = snapshot.val();\r\n      // console.log('useBookmark.data=', data);\r\n      Object.values(data).map((item) => {\r\n        item.bookmark === 'Y' && result.push(item);\r\n      });\r\n      // console.log('getBookmarkData.result=', result);\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // song_mark\r\n  // bible_mark\r\n  const setBibleBookmark = (item) => {\r\n    if (user === undefined) return;\r\n\r\n    /* \r\n    {nm: '잠31:2', text: '내 아들아 내가 무엇을 말하랴 내 태에서 난 아들아 내가 무엇을 말하랴 서원대로 얻은 아들아 내가 무엇을 말하랴', \r\n    key: '1_20', cd1: '1', cd2: '20', …}\r\n    */\r\n\r\n    if (user === undefined) return;\r\n\r\n    let value = 'N';\r\n    if (item.bookmark === undefined || item.bookmark === 'N') {\r\n      value = 'Y';\r\n    }\r\n    item.bookmark = value;\r\n\r\n    // console.log('setBibleBookmark.item=', item);\r\n\r\n    const locate = `bible_mark/${user.uid}/${item.cd1}_${item.cd2}_${item.cd3}_${item.cd4}`;\r\n    set(ref(firebaseDB, locate), item);\r\n\r\n    queryClient.invalidateQueries({ queryKey: ['useBibleBookmark'] })\r\n    query.refetch();\r\n\r\n    /*     const val = bookmark === 'Y' ? 'N' : 'Y';\r\n    setBookmark(val);\r\n\r\n    */\r\n  }\r\n\r\n  // console.log('useBibleBookmark.query.data=', query.data);\r\n  return {query, setBibleBookmark};\r\n  //return query\r\n}; // end of useBibleBookmark\r\n","import { get, ref, set } from '@firebase/database';\r\nimport BookmarkAddedIcon from '@mui/icons-material/BookmarkAdded';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { Suspense, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport AnimateButton from '../../components/button/AnimateButton';\r\nimport {\r\n  firebaseDB\r\n} from '../../firebase/firebase';\r\n\r\nimport { Grid, useTheme } from '@mui/material';\r\nimport { useQuery, useSuspenseQuery } from '@tanstack/react-query';\r\nimport { LinkItem, TextItem } from '../../components/LinkItem';\r\nimport { Loading } from '../../components/Loading';\r\nimport { ScrollToTop } from '../../components/screen/ScrollToTop';\r\nimport { TitleItem } from '../../components/TitleItem';\r\nimport { useFireUser } from '../../firebase/useFireUser';\r\nimport '../MemoDetail.css';\r\nimport BibleBookmarkText from '../../components/BibleBookmarkText';\r\n\r\nconst BtnDisplay = (props) => {\r\n  return (\r\n    <Box sx={{ my: 2, display: 'flex' }}>\r\n      <AnimateButton>\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outlined\"\r\n          // color=\"success\"\r\n          onClick={props.onBookmark}\r\n        >\r\n          {props.bookmark === 'Y' ? (\r\n            <BookmarkAddedIcon sx={{ color: 'red' }} />\r\n          ) : (\r\n            <BookmarkBorderIcon />\r\n          )}\r\n          &nbsp;북마크\r\n        </Button>\r\n      </AnimateButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// songList: {cd1: '3', cd2: '1', nm: '1. 만복의 근원 하나님', key: '3_1'}\r\nconst SongList = (props) => {\r\n  const data = new Array();\r\n\r\n  if (props.songList === undefined || props.songList === null) return;\r\n\r\n  // console.log('SongList=', props.songList.length, props.songList);\r\n\r\n  return (\r\n    <Grid container spacing={2} columns={{ xs: 12, sx: 12, md: 12, lg: 12 }}>\r\n      {props.songList.map((item, idx) => {\r\n        return (\r\n          <>\r\n            {(idx + 1) % 100 === 0 && <div id={'song' + (idx + 1)}></div>}\r\n            <Grid item xs={12} sx={6} md={4} lg={3} key={idx}>\r\n              <LinkItem to={`/bible/song/${idx + 1}`}>{item.nm}</LinkItem>\r\n            </Grid>\r\n          </>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Song = (props) => {\r\n  // const [songList, setSongList] = useState(null);\r\n  const [bookmark, setBookmark] = useState('N');\r\n\r\n  const {\r\n    data: songList,\r\n    isPending,\r\n    isFetching,\r\n  } = useSuspenseQuery(\r\n    {\r\n      queryKey: ['songList'],\r\n      queryFn: () => getSongList(),\r\n    }\r\n  );\r\n\r\n  const theme = useTheme();\r\n\r\n  const location = useLocation();\r\n  // console.log('MemoDetail.fullIndex=', fullIndex);\r\n\r\n  const { user } = useFireUser();\r\n  // const [memoId, setMemoId] = useState(id);\r\n\r\n  // ** Hooks\r\n  // const { settings, saveSettings } = useSettings();\r\n\r\n  // useEffect(() => {\r\n  //   getSongList();\r\n  // }, []);\r\n\r\n  //console.log('MemoDetail.memoId=', memoId);\r\n\r\n  async function getSongList() {\r\n    //찬송가\r\n    const songRef = ref(firebaseDB, 'bible_song');\r\n    const songSnap = await get(songRef);\r\n\r\n    const songData = new Array();\r\n    for (let key in songSnap.val()) {\r\n      const data = songSnap.val()[key];\r\n      data.key = data.cd1 + '_' + data.cd2;\r\n      // console.log('songSnap', key, data);\r\n      songData.push(data);\r\n\r\n      // 임시 제목 변경용\r\n      // set(ref(firebaseDB, `bible_song_txt/${data.cd2}/nm`), data.nm);\r\n    }\r\n    return songData;\r\n  } // end of getSongList\r\n\r\n  const onMove = (event, id) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(id);\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        block: 'center',\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"back-to-top-anchor\"></div>\r\n      <BibleBookmarkText />\r\n      <TitleItem>찬송가</TitleItem>\r\n      <Box\r\n        sx={{\r\n          position: 'fixed',\r\n          right: '10px',\r\n          top: '33%',\r\n          paddingTop: 2,\r\n          paddingBottom: 2,\r\n          paddingLeft: 3,\r\n          paddingRight: 3,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          bgcolor: (theme) =>\r\n            theme.palette.mode === 'dark' ? '#101010' : 'grey.100',\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h7\"\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            mb: 1,\r\n          }}\r\n        >\r\n          page\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            paddingTop: 2,\r\n            paddingBottom: 2,\r\n            paddingLeft: 3,\r\n            paddingRight: 3,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            border: 1,\r\n            borderRadius: '16px',\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === 'dark' ? '#101010' : 'grey.100',\r\n          }}\r\n        >\r\n          <TextItem onClick={(e) => onMove(e, '#song100')}>100</TextItem>\r\n          <TextItem onClick={(e) => onMove(e, '#song200')}>200</TextItem>\r\n          <TextItem onClick={(e) => onMove(e, '#song300')}>300</TextItem>\r\n          <TextItem onClick={(e) => onMove(e, '#song400')}>400</TextItem>\r\n          <TextItem onClick={(e) => onMove(e, '#song500')}>500</TextItem>\r\n          <TextItem onClick={(e) => onMove(e, '#song600')}>600</TextItem>\r\n        </Box>\r\n      </Box>\r\n      <Suspense fallback={<Loading />}>\r\n        <SongList songList={songList} />\r\n      </Suspense>\r\n      {/* <Container sx={{ p: 0 }}>{isLoading && <Loading />}</Container> */}\r\n      <ScrollToTop {...props} id={'#back-to-top-anchor'}>\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollToTop>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n"],"names":["BibleBookmarkText","query","useBibleBookmark","data","undefined","_jsxs","_Fragment","children","map","item","idx","Grid","container","spacing","columns","xs","sm","md","lg","id","concat","_jsx","LinkItem","to","cd1","cd2","cd3","state","cd4","nm","HtmlText","show","text","txt","Divider","queryClient","QueryClient","user","useFireUser","useQuery","queryKey","queryFn","async","uid","Error","locate","ref","firebaseDB","snapshot","get","result","Array","exists","val","Object","values","bookmark","push","getBookmarkData","enabled","useEffect","refetch","setBibleBookmark","value","set","invalidateQueries","SongList","props","songList","sx","setBookmark","useState","isPending","isFetching","useSuspenseQuery","songRef","songSnap","songData","key","getSongList","useTheme","useLocation","onMove","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","block","behavior","React","TitleItem","Box","position","right","top","paddingTop","paddingBottom","paddingLeft","paddingRight","display","alignItems","flexDirection","bgcolor","theme","palette","mode","Typography","variant","mb","border","borderRadius","TextItem","onClick","e","Suspense","fallback","Loading","ScrollToTop","Fab","color","size","KeyboardArrowUpIcon"],"sourceRoot":""}